{"ast":null,"code":"import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c1 = function (a0) {\n  return {\n    animationDuration: a0\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    value: a0,\n    params: a1\n  };\n};\nconst _c3 = [\"tabListContainer\"];\nconst _c4 = [\"tabList\"];\nconst _c5 = [\"tabListInner\"];\nconst _c6 = [\"nextPaginator\"];\nconst _c7 = [\"previousPaginator\"];\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 10);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const tab_r4 = restoredCtx.$implicit;\n      const i_r5 = restoredCtx.index;\n      const ctx_r12 = i0.ɵɵnextContext();\n      const _r0 = i0.ɵɵreference(1);\n      return ctx_r12._handleClick(tab_r4, _r0, i_r5);\n    })(\"cdkFocusChange\", function MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const i_r5 = restoredCtx.index;\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14._tabFocusChanged($event, i_r5);\n    });\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    i0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", null, 9, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const _r7 = i0.ɵɵreference(4);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex === i_r5);\n    i0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"ngClass\", tab_r4.labelClass)(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex === i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel)(\"ngIfElse\", _r7);\n  }\n}\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 11);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17._removeTabBodyWrapperHeight();\n    })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19._setTabBodyWrapperHeight($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r15 = ctx.$implicit;\n    const i_r16 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex === i_r16);\n    i0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r16))(\"ngClass\", tab_r15.bodyClass)(\"content\", tab_r15.content)(\"position\", tab_r15.position)(\"origin\", tab_r15.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    i0.ɵɵattribute(\"tabindex\", ctx_r3.contentTabIndex != null && ctx_r3.selectedIndex === i_r16 ? ctx_r3.contentTabIndex : null)(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r16));\n  }\n}\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._inkBarPositioner = _inkBarPositioner;\n    this._animationMode = _animationMode;\n  }\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element) {\n    this.show();\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      const positions = this._inkBarPositioner(element);\n      const inkBar = this._elementRef.nativeElement;\n      inkBar.style.left = positions.left;\n      inkBar.style.width = positions.width;\n    });\n  }\n  /** Shows the ink bar. */\n  show() {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) {\n  return new (t || MatInkBar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatInkBar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatInkBar,\n  selectors: [[\"mat-ink-bar\"]],\n  hostAttrs: [1, \"mat-ink-bar\"],\n  hostVars: 2,\n  hostBindings: function MatInkBar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInkBar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-ink-bar',\n      host: {\n        'class': 'mat-ink-bar',\n        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [_MAT_INK_BAR_POSITIONER]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n  constructor(/** Content for the tab. */template) {\n    this.template = template;\n  }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) {\n  return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\nMatTabContent.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabContent,\n  selectors: [[\"\", \"matTabContent\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_CONTENT,\n    useExisting: MatTabContent\n  }])]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabContent, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabContent]',\n      providers: [{\n        provide: MAT_TAB_CONTENT,\n        useExisting: MatTabContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n  constructor(templateRef, viewContainerRef, _closestTab) {\n    super(templateRef, viewContainerRef);\n    this._closestTab = _closestTab;\n  }\n}\nMatTabLabel.ɵfac = function MatTabLabel_Factory(t) {\n  return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n};\nMatTabLabel.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabel,\n  selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_LABEL,\n    useExisting: MatTabLabel\n  }]), i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-label], [matTabLabel]',\n      providers: [{\n        provide: MAT_TAB_LABEL,\n        useExisting: MatTabLabel\n      }]\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n  constructor(_viewContainerRef, _closestTabGroup) {\n    super();\n    this._viewContainerRef = _viewContainerRef;\n    this._closestTabGroup = _closestTabGroup;\n    /** Plain text label for the tab, used when there is no template label. */\n    this.textLabel = '';\n    /** Portal that will be the hosted content of the tab */\n    this._contentPortal = null;\n    /** Emits whenever the internal state of the tab changes. */\n    this._stateChanges = new Subject();\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    this.position = null;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    this.origin = null;\n    /**\n     * Whether the tab is currently active.\n     */\n    this.isActive = false;\n  }\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  get templateLabel() {\n    return this._templateLabel;\n  }\n  set templateLabel(value) {\n    this._setTemplateLabelInput(value);\n  }\n  /** @docs-private */\n  get content() {\n    return this._contentPortal;\n  }\n  ngOnChanges(changes) {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  ngOnInit() {\n    this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  _setTemplateLabelInput(value) {\n    // Only update the label if the query managed to find one. This works around an issue where a\n    // user may have manually set `templateLabel` during creation mode, which would then get\n    // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n    // tab matches the current one so that we don't pick up labels from nested tabs.\n    if (value && value._closestTab === this) {\n      this._templateLabel = value;\n    }\n  }\n}\nMatTab.ɵfac = function MatTab_Factory(t) {\n  return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n};\nMatTab.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTab,\n  selectors: [[\"mat-tab\"]],\n  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_LABEL, 5);\n      i0.ɵɵcontentQuery(dirIndex, MAT_TAB_CONTENT, 7, TemplateRef);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    }\n  },\n  viewQuery: function MatTab_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TemplateRef, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    textLabel: [\"label\", \"textLabel\"],\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    labelClass: \"labelClass\",\n    bodyClass: \"bodyClass\"\n  },\n  exportAs: [\"matTab\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB,\n    useExisting: MatTab\n  }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTab_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTab, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab',\n      inputs: ['disabled'],\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matTab',\n      providers: [{\n        provide: MAT_TAB,\n        useExisting: MatTab\n      }],\n      template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TAB_GROUP]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    templateLabel: [{\n      type: ContentChild,\n      args: [MAT_TAB_LABEL]\n    }],\n    _explicitContent: [{\n      type: ContentChild,\n      args: [MAT_TAB_CONTENT, {\n        read: TemplateRef,\n        static: true\n      }]\n    }],\n    _implicitContent: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    textLabel: [{\n      type: Input,\n      args: ['label']\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    labelClass: [{\n      type: Input\n    }],\n    bodyClass: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n  // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', style({\n    transform: 'none'\n  })),\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px'\n  })), state('right', style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px'\n  })), transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), transition('void => left-origin-center', [style({\n    transform: 'translate3d(-100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), transition('void => right-origin-center', [style({\n    transform: 'translate3d(100%, 0, 0)'\n  }), animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n  constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n    this._host = _host;\n    /** Subscription to events for when the tab body begins centering. */\n    this._centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    this._leavingSub = Subscription.EMPTY;\n  }\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit() {\n    super.ngOnInit();\n    this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n      if (isCentering && !this.hasAttached()) {\n        this.attach(this._host._content);\n      }\n    });\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n  /** Clean up centering subscription. */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {\n  return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n};\nMatTabBodyPortal.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabBodyPortal,\n  selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBodyPortal, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabBodyHost]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: MatTabBody,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => MatTabBody)]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n  constructor(_elementRef, _dir, changeDetectorRef) {\n    this._elementRef = _elementRef;\n    this._dir = _dir;\n    /** Subscription to the directionality change observable. */\n    this._dirChangeSubscription = Subscription.EMPTY;\n    /** Emits when an animation on the tab is complete. */\n    this._translateTabComplete = new Subject();\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    this._onCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._beforeCentering = new EventEmitter();\n    /** Event emitted before the centering of the tab begins. */\n    this._afterLeavingCenter = new EventEmitter();\n    /** Event emitted when the tab completes its animation towards the center. */\n    this._onCentered = new EventEmitter(true);\n    // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    this.animationDuration = '500ms';\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe(dir => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  set position(position) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n  _onTranslateTabStarted(event) {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n  /** The text direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position) {\n    return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n  }\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  _computePositionAnimationState(dir = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  _computePositionFromOrigin(origin) {\n    const dir = this._getLayoutDirection();\n    if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n      return 'left-origin-center';\n    }\n    return 'right-origin-center';\n  }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {\n  return new (t || _MatTabBodyBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\n_MatTabBodyBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabBodyBase,\n  inputs: {\n    _content: [\"content\", \"_content\"],\n    origin: \"origin\",\n    animationDuration: \"animationDuration\",\n    position: \"position\"\n  },\n  outputs: {\n    _onCentering: \"_onCentering\",\n    _beforeCentering: \"_beforeCentering\",\n    _afterLeavingCenter: \"_afterLeavingCenter\",\n    _onCentered: \"_onCentered\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabBodyBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _onCentering: [{\n      type: Output\n    }],\n    _beforeCentering: [{\n      type: Output\n    }],\n    _afterLeavingCenter: [{\n      type: Output\n    }],\n    _onCentered: [{\n      type: Output\n    }],\n    _content: [{\n      type: Input,\n      args: ['content']\n    }],\n    origin: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n  constructor(elementRef, dir, changeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) {\n  return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nMatTabBody.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabBody,\n  selectors: [[\"mat-tab-body\"]],\n  viewQuery: function MatTabBody_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-body\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 3,\n  vars: 6,\n  consts: [[\"cdkScrollable\", \"\", 1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]],\n  template: function MatTabBody_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n        return ctx._onTranslateTabStarted($event);\n      })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n        return ctx._translateTabComplete.next($event);\n      });\n      i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c2, ctx._position, i0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    }\n  },\n  directives: [MatTabBodyPortal],\n  styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matTabsAnimations.translateTab]\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabBody, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-body',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      animations: [matTabsAnimations.translateTab],\n      host: {\n        'class': 'mat-tab-body'\n      },\n      template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n      styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    _portalHost: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n  constructor(elementRef) {\n    super();\n    this.elementRef = elementRef;\n  }\n  /** Sets focus on the wrapper element */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  getOffsetLeft() {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n  getOffsetWidth() {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {\n  return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nMatTabLabelWrapper.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLabelWrapper,\n  selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n  hostVars: 3,\n  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n    type: Directive,\n    args: [{\n      selector: '[matTabLabelWrapper]',\n      inputs: ['disabled'],\n      host: {\n        '[class.mat-tab-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n  constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._viewportRuler = _viewportRuler;\n    this._dir = _dir;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    this._animationMode = _animationMode;\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    this._scrollDistance = 0;\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    this._selectedIndexChanged = false;\n    /** Emits when the component is destroyed. */\n    this._destroyed = new Subject();\n    /** Whether the controls for pagination should be displayed */\n    this._showPaginationControls = false;\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    this._disableScrollAfter = true;\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    this._disableScrollBefore = true;\n    /** Stream that will stop the automated scrolling. */\n    this._stopScrolling = new Subject();\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     */\n    this.disablePagination = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the option is selected. */\n    this.selectFocusedIndex = new EventEmitter();\n    /** Event emitted when a label is focused. */\n    this.indexFocused = new EventEmitter();\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._stopInterval();\n      });\n    });\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    value = coerceNumberProperty(value);\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('before');\n    });\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._handlePaginatorPress('after');\n    });\n  }\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : of('ltr');\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n    this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();\n    this._keyManager.updateActiveItem(this._selectedIndex);\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n    // can hold up tests that are in a background tab.\n    this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate\n      // the element dimensions. The call has to be wrapped in `NgZone.run`,\n      // because the viewport change handler runs outside of Angular.\n      this._ngZone.run(() => {\n        Promise.resolve().then(() => {\n          // Clamp the scroll distance, because it can change with the number of tabs.\n          this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n          realign();\n        });\n      });\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n  /** Sends any changes that could affect the layout of the items. */\n  _itemsResized() {\n    if (typeof ResizeObserver !== 'function') {\n      return EMPTY;\n    }\n    return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n      const resizeObserver = new ResizeObserver(() => {\n        observer.next();\n      });\n      tabItems.forEach(item => {\n        resizeObserver.observe(item.elementRef.nativeElement);\n      });\n      return () => {\n        resizeObserver.disconnect();\n      };\n    }))),\n    // Skip the first emit since the resize observer emits when an item\n    // is observed for new items when the tab is already inserted\n    skip(1));\n  }\n  ngAfterContentChecked() {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this._itemSelected(event);\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : 0;\n  }\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n    this._keyManager.setActiveItem(value);\n  }\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index) {\n    if (!this._items) {\n      return true;\n    }\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n  /** The layout direction of the containing app. */\n  _getLayoutDirection() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n    const scrollDistance = this.scrollDistance;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    if (this._platform.TRIDENT || this._platform.EDGE) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance() {\n    return this._scrollDistance;\n  }\n  set scrollDistance(value) {\n    this._scrollTo(value);\n  }\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex) {\n    if (this.disablePagination) {\n      return;\n    }\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n    if (!selectedLabel) {\n      return;\n    }\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {\n      offsetLeft,\n      offsetWidth\n    } = selectedLabel.elementRef.nativeElement;\n    let labelBeforePos, labelAfterPos;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n      this._showPaginationControls = isEnabled;\n    }\n  }\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance() {\n    const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return lengthOfTabList - viewLength || 0;\n  }\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab() {\n    const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction, mouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n    // Avoid overlapping timers.\n    this._stopInterval();\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n    // Keep the timer going until something tells it to stop or the component is destroyed.\n    .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n      const {\n        maxScrollDistance,\n        distance\n      } = this._scrollHeader(direction);\n      // Stop the timer if we've reached the start or the end.\n      if (distance === 0 || distance >= maxScrollDistance) {\n        this._stopInterval();\n      }\n    });\n  }\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  _scrollTo(position) {\n    if (this.disablePagination) {\n      return {\n        maxScrollDistance: 0,\n        distance: 0\n      };\n    }\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n    return {\n      maxScrollDistance,\n      distance: this._scrollDistance\n    };\n  }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n  return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatPaginatedTabHeader.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatPaginatedTabHeader,\n  inputs: {\n    disablePagination: \"disablePagination\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disablePagination: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n  }\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  _itemSelected(event) {\n    event.preventDefault();\n  }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {\n  return new (t || _MatTabHeaderBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n_MatTabHeaderBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabHeaderBase,\n  inputs: {\n    disableRipple: \"disableRipple\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    disableRipple: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n  constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) {\n  return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatTabHeader.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabHeader,\n  selectors: [[\"mat-tab-header\"]],\n  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabHeader_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-header\"],\n  hostVars: 4,\n  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    }\n  },\n  inputs: {\n    selectedIndex: \"selectedIndex\"\n  },\n  outputs: {\n    selectFocusedIndex: \"selectFocusedIndex\",\n    indexFocused: \"indexFocused\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabHeader_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabHeader_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabHeader_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-header',\n      inputs: ['selectedIndex'],\n      outputs: ['selectFocusedIndex', 'indexFocused'],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      host: {\n        'class': 'mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n      },\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [MatTabLabelWrapper, {\n        descendants: false\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n  constructor(_elementRef) {\n    this._elementRef = _elementRef;\n  }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n  constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n    super(elementRef);\n    this._changeDetectorRef = _changeDetectorRef;\n    this._animationMode = _animationMode;\n    /** All of the tabs that belong to the group. */\n    this._tabs = new QueryList();\n    /** The tab index that should be selected after the content has been checked. */\n    this._indexToSelect = 0;\n    /** Index of the tab that was focused last. */\n    this._lastFocusedTabIndex = null;\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    this._tabBodyWrapperHeight = 0;\n    /** Subscription to tabs being added/removed. */\n    this._tabsSubscription = Subscription.EMPTY;\n    /** Subscription to changes in the tab labels. */\n    this._tabLabelSubscription = Subscription.EMPTY;\n    this._selectedIndex = null;\n    /** Position of the tab header. */\n    this.headerPosition = 'above';\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    this.selectedIndexChange = new EventEmitter();\n    /** Event emitted when focus has changed within a tab group. */\n    this.focusChange = new EventEmitter();\n    /** Event emitted when the body animation has completed */\n    this.animationDone = new EventEmitter();\n    /** Event emitted when the tab selection has changed. */\n    this.selectedTabChange = new EventEmitter(true);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n    this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n    this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n  }\n  /** Whether the tab group should grow to the size of the active tab. */\n  get dynamicHeight() {\n    return this._dynamicHeight;\n  }\n  set dynamicHeight(value) {\n    this._dynamicHeight = coerceBooleanProperty(value);\n  }\n  /** The index of the active tab. */\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(value) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  get animationDuration() {\n    return this._animationDuration;\n  }\n  set animationDuration(value) {\n    this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n  }\n  /**\n   * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n   * accessibility when the tab does not have focusable elements or if it has scrollable content.\n   * The `tabindex` will be removed automatically for inactive tabs.\n   * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n   */\n  get contentTabIndex() {\n    return this._contentTabIndex;\n  }\n  set contentTabIndex(value) {\n    this._contentTabIndex = coerceNumberProperty(value, null);\n  }\n  /** Background color of the tab group. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const nativeElement = this._elementRef.nativeElement;\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n        // Preserve the height so page doesn't scroll up during tab change.\n        // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.minHeight = wrapper.clientHeight + 'px';\n      }\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n          // Clear the min-height, this was needed during tab change to avoid\n          // unnecessary scrolling.\n          this._tabBodyWrapper.nativeElement.style.minHeight = '';\n        }\n      });\n    }\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab, index) => {\n      tab.position = index - indexToSelect;\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._lastFocusedTabIndex = null;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n        let selectedTab;\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            this._lastFocusedTabIndex = null;\n            selectedTab = tabs[i];\n            break;\n          }\n        }\n        // If we haven't found an active tab and a tab exists at the selected index, it means\n        // that the active tab was swapped out. Since this won't be picked up by the rendering\n        // loop in `ngAfterContentChecked`, we need to sync it up manually.\n        if (!selectedTab && tabs[indexToSelect]) {\n          Promise.resolve().then(() => {\n            tabs[indexToSelect].isActive = true;\n            this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          });\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Listens to changes in all of the tabs. */\n  _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n      this._tabs.reset(tabs.filter(tab => {\n        return tab._closestTabGroup === this || !tab._closestTabGroup;\n      }));\n      this._tabs.notifyOnChanges();\n    });\n  }\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n  /**\n   * Recalculates the tab group's pagination dimensions.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    if (this._tabHeader) {\n      this._tabHeader.updatePagination();\n    }\n  }\n  /**\n   * Sets focus to a particular tab.\n   * @param index Index of the tab to be focused.\n   */\n  focusTab(index) {\n    const header = this._tabHeader;\n    if (header) {\n      header.focusIndex = index;\n    }\n  }\n  _focusChanged(index) {\n    this._lastFocusedTabIndex = index;\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n  _createChangeEvent(index) {\n    const event = new MatTabChangeEvent();\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  _clampTabIndex(index) {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i) {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i) {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight) {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n      return;\n    }\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight() {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab, tabHeader, index) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab, index) {\n    if (tab.disabled) {\n      return null;\n    }\n    const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n    return index === targetIndex ? 0 : -1;\n  }\n  /** Callback for when the focused state of a tab has changed. */\n  _tabFocusChanged(focusOrigin, index) {\n    // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n    // can cause the tab to be moved out from under the pointer, interrupting the\n    // click sequence (see #21898). We don't need to scroll the tab into view for\n    // such cases anyway, because it will be done when the tab becomes selected.\n    if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n      this._tabHeader.focusIndex = index;\n    }\n  }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {\n  return new (t || _MatTabGroupBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n_MatTabGroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabGroupBase,\n  inputs: {\n    dynamicHeight: \"dynamicHeight\",\n    selectedIndex: \"selectedIndex\",\n    headerPosition: \"headerPosition\",\n    animationDuration: \"animationDuration\",\n    contentTabIndex: \"contentTabIndex\",\n    disablePagination: \"disablePagination\",\n    backgroundColor: \"backgroundColor\"\n  },\n  outputs: {\n    selectedIndexChange: \"selectedIndexChange\",\n    focusChange: \"focusChange\",\n    animationDone: \"animationDone\",\n    selectedTabChange: \"selectedTabChange\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabGroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    dynamicHeight: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    headerPosition: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    contentTabIndex: [{\n      type: Input\n    }],\n    disablePagination: [{\n      type: Input\n    }],\n    backgroundColor: [{\n      type: Input\n    }],\n    selectedIndexChange: [{\n      type: Output\n    }],\n    focusChange: [{\n      type: Output\n    }],\n    animationDone: [{\n      type: Output\n    }],\n    selectedTabChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n  constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) {\n  return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatTabGroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabGroup,\n  selectors: [[\"mat-tab-group\"]],\n  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    }\n  },\n  viewQuery: function MatTabGroup_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c8, 5);\n      i0.ɵɵviewQuery(_c9, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-group\"],\n  hostVars: 4,\n  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    }\n  },\n  inputs: {\n    color: \"color\",\n    disableRipple: \"disableRipple\"\n  },\n  exportAs: [\"matTabGroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  decls: 6,\n  vars: 7,\n  consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"ngClass\", \"disabled\", \"matRippleDisabled\", \"click\", \"cdkFocusChange\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\", \"ngIfElse\"], [\"tabTextLabel\", \"\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"ngClass\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]],\n  template: function MatTabGroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n      i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n        return ctx._focusChanged($event);\n      })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n        return ctx.selectedIndex = $event;\n      });\n      i0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 5, 15, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 10, \"mat-tab-body\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    }\n  },\n  directives: [MatTabHeader, i3$1.NgForOf, MatTabLabelWrapper, i4.MatRipple, i7.CdkMonitorFocus, i3$1.NgClass, i3$1.NgIf, i7$1.CdkPortalOutlet, MatTabBody],\n  styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-group',\n      exportAs: 'matTabGroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      inputs: ['color', 'disableRipple'],\n      providers: [{\n        provide: MAT_TAB_GROUP,\n        useExisting: MatTabGroup\n      }],\n      host: {\n        'class': 'mat-tab-group',\n        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n      },\n      template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n      styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_TABS_CONFIG]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _allTabs: [{\n      type: ContentChildren,\n      args: [MatTab, {\n        descendants: true\n      }]\n    }],\n    _tabBodyWrapper: [{\n      type: ViewChild,\n      args: ['tabBodyWrapper']\n    }],\n    _tabHeader: [{\n      type: ViewChild,\n      args: ['tabHeader']\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    this._disableRipple = false;\n    /** Theme color of the nav bar. */\n    this.color = 'primary';\n  }\n  /** Background color of the tab nav. */\n  get backgroundColor() {\n    return this._backgroundColor;\n  }\n  set backgroundColor(value) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n    this._backgroundColor = value;\n  }\n  /** Whether the ripple effect is disabled or not. */\n  get disableRipple() {\n    return this._disableRipple;\n  }\n  set disableRipple(value) {\n    this._disableRipple = coerceBooleanProperty(value);\n  }\n  _itemSelected() {\n    // noop\n  }\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n    super.ngAfterContentInit();\n  }\n  /** Notifies the component that the active link has been changed. */\n  updateActiveLink() {\n    if (!this._items) {\n      return;\n    }\n    const items = this._items.toArray();\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        if (this.tabPanel) {\n          this.tabPanel._activeTabId = items[i].id;\n        }\n        return;\n      }\n    }\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n  _getRole() {\n    return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n  }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {\n  return new (t || _MatTabNavBase)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n_MatTabNavBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabNavBase,\n  inputs: {\n    backgroundColor: \"backgroundColor\",\n    disableRipple: \"disableRipple\",\n    color: \"color\",\n    tabPanel: \"tabPanel\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabNavBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    backgroundColor: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    tabPanel: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n  constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) {\n  return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatTabNav.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNav,\n  selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n    }\n  },\n  viewQuery: function MatTabNav_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(MatInkBar, 7);\n      i0.ɵɵviewQuery(_c3, 7);\n      i0.ɵɵviewQuery(_c4, 7);\n      i0.ɵɵviewQuery(_c5, 7);\n      i0.ɵɵviewQuery(_c6, 5);\n      i0.ɵɵviewQuery(_c7, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    }\n  },\n  hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"],\n  hostVars: 11,\n  hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    }\n  },\n  inputs: {\n    color: \"color\"\n  },\n  exportAs: [\"matTabNavBar\", \"matTabNav\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  attrs: _c10,\n  ngContentSelectors: _c0,\n  decls: 14,\n  vars: 10,\n  consts: [[\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"tabListInner\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"disabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]],\n  template: function MatTabNav_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"button\", 0, 1);\n      i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n        return ctx._handlePaginatorClick(\"before\");\n      })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n        return ctx._handlePaginatorPress(\"before\", $event);\n      })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n        return ctx._handleKeydown($event);\n      });\n      i0.ɵɵelementStart(5, \"div\", 5, 6);\n      i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n        return ctx._onContentChanges();\n      });\n      i0.ɵɵelementStart(7, \"div\", 7, 8);\n      i0.ɵɵprojection(9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"mat-ink-bar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 9, 10);\n      i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_11_listener($event) {\n        return ctx._handlePaginatorPress(\"after\", $event);\n      })(\"click\", function MatTabNav_Template_button_click_11_listener() {\n        return ctx._handlePaginatorClick(\"after\");\n      })(\"touchend\", function MatTabNav_Template_button_touchend_11_listener() {\n        return ctx._stopInterval();\n      });\n      i0.ɵɵelement(13, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n      i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n    }\n  },\n  directives: [i4.MatRipple, i5.CdkObserveContent, MatInkBar],\n  styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNav, [{\n    type: Component,\n    args: [{\n      selector: '[mat-tab-nav-bar]',\n      exportAs: 'matTabNavBar, matTabNav',\n      inputs: ['color'],\n      host: {\n        '[attr.role]': '_getRole()',\n        'class': 'mat-tab-nav-bar mat-tab-header',\n        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.Default,\n      template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\",\n      styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1$1.ViewportRuler\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    _items: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatTabLink), {\n        descendants: true\n      }]\n    }],\n    _inkBar: [{\n      type: ViewChild,\n      args: [MatInkBar, {\n        static: true\n      }]\n    }],\n    _tabListContainer: [{\n      type: ViewChild,\n      args: ['tabListContainer', {\n        static: true\n      }]\n    }],\n    _tabList: [{\n      type: ViewChild,\n      args: ['tabList', {\n        static: true\n      }]\n    }],\n    _tabListInner: [{\n      type: ViewChild,\n      args: ['tabListInner', {\n        static: true\n      }]\n    }],\n    _nextPaginator: [{\n      type: ViewChild,\n      args: ['nextPaginator']\n    }],\n    _previousPaginator: [{\n      type: ViewChild,\n      args: ['previousPaginator']\n    }]\n  });\n})();\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n  constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n    super();\n    this._tabNavBar = _tabNavBar;\n    this.elementRef = elementRef;\n    this._focusMonitor = _focusMonitor;\n    /** Whether the tab link is active or not. */\n    this._isActive = false;\n    /** Unique id for the tab. */\n    this.id = `mat-tab-link-${nextUniqueId++}`;\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {\n        enterDuration: 0,\n        exitDuration: 0\n      };\n    }\n  }\n  /** Whether the link is active. */\n  get active() {\n    return this._isActive;\n  }\n  set active(value) {\n    const newValue = coerceBooleanProperty(value);\n    if (newValue !== this._isActive) {\n      this._isActive = newValue;\n      this._tabNavBar.updateActiveLink();\n    }\n  }\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled() {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n  }\n  /** Focuses the tab link. */\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n  _handleFocus() {\n    // Since we allow navigation through tabbing in the nav bar, we\n    // have to update the focused index whenever the link receives focus.\n    this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n  }\n  _handleKeydown(event) {\n    if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n      this.elementRef.nativeElement.click();\n    }\n  }\n  _getAriaControls() {\n    return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n  }\n  _getAriaSelected() {\n    if (this._tabNavBar.tabPanel) {\n      return this.active ? 'true' : 'false';\n    } else {\n      return this.elementRef.nativeElement.getAttribute('aria-selected');\n    }\n  }\n  _getAriaCurrent() {\n    return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n  }\n  _getRole() {\n    return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n  }\n  _getTabIndex() {\n    if (this._tabNavBar.tabPanel) {\n      return this._isActive ? 0 : -1;\n    } else {\n      return this.tabIndex;\n    }\n  }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {\n  return new (t || _MatTabLinkBase)(i0.ɵɵdirectiveInject(_MatTabNavBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\n_MatTabLinkBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatTabLinkBase,\n  inputs: {\n    active: \"active\",\n    id: \"id\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatTabLinkBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: _MatTabNavBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    active: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n  constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) {\n  return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i7.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatTabLink.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatTabLink,\n  selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n  hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"],\n  hostVars: 11,\n  hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n        return ctx._handleFocus();\n      })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n      i0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    tabIndex: \"tabIndex\"\n  },\n  exportAs: [\"matTabLink\"],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabLink, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-tab-link], [matTabLink]',\n      exportAs: 'matTabLink',\n      inputs: ['disabled', 'disableRipple', 'tabIndex'],\n      host: {\n        'class': 'mat-tab-link mat-focus-indicator',\n        '[attr.aria-controls]': '_getAriaControls()',\n        '[attr.aria-current]': '_getAriaCurrent()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.id]': 'id',\n        '[attr.tabIndex]': '_getTabIndex()',\n        '[attr.role]': '_getRole()',\n        '[class.mat-tab-disabled]': 'disabled',\n        '[class.mat-tab-label-active]': 'active',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], function () {\n    return [{\n      type: MatTabNav\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i3.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Attribute,\n        args: ['tabindex']\n      }]\n    }, {\n      type: i7.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n  constructor() {\n    /** Unique id for the tab panel. */\n    this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n  }\n}\nMatTabNavPanel.ɵfac = function MatTabNavPanel_Factory(t) {\n  return new (t || MatTabNavPanel)();\n};\nMatTabNavPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatTabNavPanel,\n  selectors: [[\"mat-tab-nav-panel\"]],\n  hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-tab-nav-panel\"],\n  hostVars: 2,\n  hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n    }\n  },\n  inputs: {\n    id: \"id\"\n  },\n  exportAs: [\"matTabNavPanel\"],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function MatTabNavPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵprojection(0);\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabNavPanel, [{\n    type: Component,\n    args: [{\n      selector: 'mat-tab-nav-panel',\n      exportAs: 'matTabNavPanel',\n      template: '<ng-content></ng-content>',\n      host: {\n        '[attr.aria-labelledby]': '_activeTabId',\n        '[attr.id]': 'id',\n        'class': 'mat-tab-nav-panel',\n        'role': 'tabpanel'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) {\n  return new (t || MatTabsModule)();\n};\nMatTabsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatTabsModule\n});\nMatTabsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule], MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatTabsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, PortalModule, MatRippleModule, ObserversModule, A11yModule],\n      // Don't export all components because some are only to be used internally.\n      exports: [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabNavPanel, MatTabLink, MatTabContent],\n      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabNavPanel, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };","map":{"version":3,"names":["i7","FocusKeyManager","A11yModule","i5","ObserversModule","i7$1","CdkPortal","TemplatePortal","CdkPortalOutlet","PortalModule","i3$1","DOCUMENT","CommonModule","i0","InjectionToken","Directive","Inject","Optional","TemplateRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ContentChild","ViewChild","Input","forwardRef","EventEmitter","Output","ContentChildren","QueryList","Attribute","NgModule","i4","mixinDisabled","mixinColor","mixinDisableRipple","mixinTabIndex","MAT_RIPPLE_GLOBAL_OPTIONS","RippleRenderer","MatCommonModule","MatRippleModule","ANIMATION_MODULE_TYPE","take","startWith","distinctUntilChanged","takeUntil","switchMap","skip","Subject","Subscription","fromEvent","of","merge","EMPTY","Observable","timer","i1","trigger","state","style","transition","animate","coerceNumberProperty","coerceBooleanProperty","i1$1","i3","normalizePassiveListenerOptions","hasModifierKey","SPACE","ENTER","MatTab_ng_template_0_Template","rf","ctx","ɵɵprojection","_c0","MatTabBody_ng_template_2_Template","_c1","a0","animationDuration","_c2","a1","value","params","_c3","_c4","_c5","_c6","_c7","_c8","_c9","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","MatTabGroup_div_2_ng_template_2_Template","ɵɵtemplate","tab_r4","ɵɵnextContext","$implicit","ɵɵproperty","templateLabel","MatTabGroup_div_2_ng_template_3_Template","ɵɵtext","ɵɵtextInterpolate","textLabel","MatTabGroup_div_2_Template","_r13","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatTabGroup_div_2_Template_div_click_0_listener","restoredCtx","ɵɵrestoreView","i_r5","index","ctx_r12","_r0","ɵɵreference","_handleClick","MatTabGroup_div_2_Template_div_cdkFocusChange_0_listener","$event","ctx_r14","_tabFocusChanged","ɵɵtemplateRefExtractor","ɵɵelementEnd","_r7","ctx_r1","ɵɵclassProp","selectedIndex","_getTabLabelId","labelClass","disabled","disableRipple","ɵɵattribute","_getTabIndex","_tabs","length","_getTabContentId","ariaLabel","ariaLabelledby","ɵɵadvance","MatTabGroup_mat_tab_body_5_Template","_r18","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener","ctx_r17","_removeTabBodyWrapperHeight","MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener","ctx_r19","_setTabBodyWrapperHeight","tab_r15","i_r16","ctx_r3","bodyClass","content","position","origin","contentTabIndex","_c10","_MAT_INK_BAR_POSITIONER","providedIn","factory","_MAT_INK_BAR_POSITIONER_FACTORY","method","element","left","offsetLeft","width","offsetWidth","MatInkBar","constructor","_elementRef","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","onStable","pipe","subscribe","positions","inkBar","nativeElement","visibility","hide","ɵfac","MatInkBar_Factory","t","ɵɵdirectiveInject","ElementRef","NgZone","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatInkBar_HostBindings","ngDevMode","ɵsetClassMetadata","args","selector","host","undefined","decorators","MAT_TAB_CONTENT","MatTabContent","template","MatTabContent_Factory","features","ɵɵProvidersFeature","provide","useExisting","providers","MAT_TAB_LABEL","MAT_TAB","MatTabLabel","templateRef","viewContainerRef","_closestTab","MatTabLabel_Factory","ViewContainerRef","ɵɵInheritDefinitionFeature","_MatTabBase","MAT_TAB_GROUP","MatTab","_viewContainerRef","_closestTabGroup","_contentPortal","_stateChanges","isActive","_templateLabel","_setTemplateLabelInput","ngOnChanges","changes","hasOwnProperty","next","ngOnDestroy","complete","ngOnInit","_explicitContent","_implicitContent","MatTab_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatTab_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatTab_Query","ɵɵviewQuery","inputs","exportAs","ɵɵNgOnChangesFeature","ngContentSelectors","decls","vars","MatTab_Template","ɵɵprojectionDef","encapsulation","changeDetection","Default","None","read","static","matTabsAnimations","translateTab","transform","minHeight","MatTabBodyPortal","componentFactoryResolver","_host","_document","_centeringSub","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","MatTabBodyPortal_Factory","ComponentFactoryResolver","MatTabBody","_MatTabBodyBase","_dir","changeDetectorRef","_dirChangeSubscription","_translateTabComplete","_onCentering","_onCentered","change","dir","_computePositionAnimationState","markForCheck","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","_MatTabBodyBase_Factory","Directionality","ChangeDetectorRef","outputs","elementRef","MatTabBody_Factory","MatTabBody_Query","_portalHost","consts","MatTabBody_Template","MatTabBody_Template_div_animation_translateTab_start_0_listener","MatTabBody_Template_div_animation_translateTab_done_0_listener","ɵɵpureFunction2","ɵɵpureFunction1","directives","styles","data","animation","animations","MAT_TABS_CONFIG","_MatTabLabelWrapperBase","MatTabLabelWrapper","focus","getOffsetLeft","getOffsetWidth","MatTabLabelWrapper_Factory","MatTabLabelWrapper_HostBindings","passiveEventListenerOptions","passive","EXAGGERATED_OVERSCROLL","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_changeDetectorRef","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_destroyed","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","disablePagination","_selectedIndex","selectFocusedIndex","indexFocused","runOutsideAngular","_stopInterval","_keyManager","updateActiveItem","ngAfterViewInit","_previousPaginator","_handlePaginatorPress","_nextPaginator","ngAfterContentInit","dirChange","resize","realign","updatePagination","_alignInkBarToSelectedTab","_items","withHorizontalOrientation","withHomeAndEnd","withWrap","_itemsResized","run","Promise","resolve","then","Math","max","min","_getMaxScrollDistance","newFocusIndex","_setTabFocus","ResizeObserver","tabItems","observer","resizeObserver","forEach","item","observe","disconnect","ngAfterContentChecked","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","keyCode","focusIndex","_itemSelected","onKeydown","_onContentChanges","textContent","_currentTextContent","_checkPaginationEnabled","activeItemIndex","_isValidIndex","setActiveItem","tab","toArray","tabIndex","containerEl","_tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","_tabList","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_tabListInner","beforeVisiblePos","afterVisiblePos","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","_inkBar","mouseEvent","button","maxScrollDistance","distance","MatPaginatedTabHeader_Factory","ViewportRuler","Platform","_MatTabHeaderBase","viewportRuler","ngZone","platform","animationMode","_disableRipple","preventDefault","_MatTabHeaderBase_Factory","MatTabHeader","MatTabHeader_Factory","MatTabHeader_ContentQueries","MatTabHeader_Query","MatTabHeader_HostBindings","MatTabHeader_Template","MatTabHeader_Template_button_click_0_listener","MatTabHeader_Template_button_mousedown_0_listener","MatTabHeader_Template_button_touchend_0_listener","ɵɵelement","MatTabHeader_Template_div_keydown_3_listener","MatTabHeader_Template_div_cdkObserveContent_5_listener","MatTabHeader_Template_button_mousedown_11_listener","MatTabHeader_Template_button_click_11_listener","MatTabHeader_Template_button_touchend_11_listener","MatRipple","CdkObserveContent","descendants","nextId","MatTabChangeEvent","_MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","_indexToSelect","_lastFocusedTabIndex","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","dynamicHeight","_dynamicHeight","_animationDuration","test","_contentTabIndex","backgroundColor","_backgroundColor","classList","remove","add","indexToSelect","_clampTabIndex","isFirstRun","_createChangeEvent","wrapper","_tabBodyWrapper","_subscribeToAllTabChanges","_subscribeToTabLabels","tabs","selectedTab","i","_allTabs","reset","filter","notifyOnChanges","destroy","realignInkBar","_tabHeader","focusTab","header","_focusChanged","map","tabHeight","height","offsetHeight","tabHeader","targetIndex","focusOrigin","_MatTabGroupBase_Factory","MatTabGroup","MatTabGroup_Factory","MatTabGroup_ContentQueries","MatTabGroup_Query","MatTabGroup_HostBindings","color","MatTabGroup_Template","MatTabGroup_Template_mat_tab_header_indexFocused_0_listener","MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener","NgForOf","CdkMonitorFocus","NgClass","NgIf","nextUniqueId","_MatTabNavBase","updateActiveLink","items","active","tabPanel","_activeTabId","id","_getRole","getAttribute","_MatTabNavBase_Factory","MatTabNav","MatTabNav_Factory","MatTabNav_ContentQueries","MatTabLink","MatTabNav_Query","MatTabNav_HostBindings","attrs","MatTabNav_Template","MatTabNav_Template_button_click_0_listener","MatTabNav_Template_button_mousedown_0_listener","MatTabNav_Template_button_touchend_0_listener","MatTabNav_Template_div_keydown_3_listener","MatTabNav_Template_div_cdkObserveContent_5_listener","MatTabNav_Template_button_mousedown_11_listener","MatTabNav_Template_button_click_11_listener","MatTabNav_Template_button_touchend_11_listener","_MatTabLinkMixinBase","_MatTabLinkBase","_tabNavBar","globalRippleOptions","_focusMonitor","_isActive","rippleConfig","parseInt","enterDuration","exitDuration","newValue","rippleDisabled","monitor","stopMonitoring","_handleFocus","indexOf","click","_getAriaControls","_getAriaSelected","_getAriaCurrent","_MatTabLinkBase_Factory","ɵɵinjectAttribute","FocusMonitor","tabNavBar","focusMonitor","_tabLinkRipple","setupTriggerEvents","_removeTriggerEvents","MatTabLink_Factory","MatTabLink_HostBindings","MatTabLink_focus_HostBindingHandler","MatTabLink_keydown_HostBindingHandler","MatTabNavPanel","MatTabNavPanel_Factory","MatTabNavPanel_HostBindings","MatTabNavPanel_Template","OnPush","MatTabsModule","MatTabsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations"],"sources":["C:/Users/Mariosoft/Desktop/New folder/material-pro-angular-lite-master/material-pro-angular-lite-master/angular-13/node_modules/@angular/material/fesm2020/tabs.mjs"],"sourcesContent":["import * as i7 from '@angular/cdk/a11y';\nimport { FocusKeyManager, A11yModule } from '@angular/cdk/a11y';\nimport * as i5 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i7$1 from '@angular/cdk/portal';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i3$1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ContentChild, ViewChild, Input, forwardRef, EventEmitter, Output, ContentChildren, QueryList, Attribute, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { take, startWith, distinctUntilChanged, takeUntil, switchMap, skip } from 'rxjs/operators';\nimport { Subject, Subscription, fromEvent, of, merge, EMPTY, Observable, timer } from 'rxjs';\nimport * as i1 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY,\n});\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    const method = (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    });\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\nclass MatInkBar {\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param element\n     */\n    alignToElement(element) {\n        this.show();\n        this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n            const positions = this._inkBarPositioner(element);\n            const inkBar = this._elementRef.nativeElement;\n            inkBar.style.left = positions.left;\n            inkBar.style.width = positions.width;\n        });\n    }\n    /** Shows the ink bar. */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /** Hides the ink bar. */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n}\nMatInkBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: _MAT_INK_BAR_POSITIONER }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInkBar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInkBar, selector: \"mat-ink-bar\", host: { properties: { \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-ink-bar\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInkBar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-ink-bar',\n                    host: {\n                        'class': 'mat-ink-bar',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_MAT_INK_BAR_POSITIONER]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_CONTENT = new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nclass MatTabContent {\n    constructor(/** Content for the tab. */ template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabContent.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabContent, selector: \"[matTabContent]\", providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabContent]',\n                    providers: [{ provide: MAT_TAB_CONTENT, useExisting: MatTabContent }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nclass MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n        super(templateRef, viewContainerRef);\n        this._closestTab = _closestTab;\n    }\n}\nMatTabLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, deps: [{ token: i0.TemplateRef }, { token: i0.ViewContainerRef }, { token: MAT_TAB, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabel, selector: \"[mat-tab-label], [matTabLabel]\", providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-label], [matTabLabel]',\n                    providers: [{ provide: MAT_TAB_LABEL, useExisting: MatTabLabel }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB]\n                }, {\n                    type: Optional\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nconst _MatTabBase = mixinDisabled(class {\n});\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabBase {\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /** Plain text label for the tab, used when there is no template label. */\n        this.textLabel = '';\n        /** Portal that will be the hosted content of the tab */\n        this._contentPortal = null;\n        /** Emits whenever the internal state of the tab changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n        return this._templateLabel;\n    }\n    set templateLabel(value) {\n        this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n        return this._contentPortal;\n    }\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n        // Only update the label if the query managed to find one. This works around an issue where a\n        // user may have manually set `templateLabel` during creation mode, which would then get\n        // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n        // tab matches the current one so that we don't pick up labels from nested tabs.\n        if (value && value._closestTab === this) {\n            this._templateLabel = value;\n        }\n    }\n}\nMatTab.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, deps: [{ token: i0.ViewContainerRef }, { token: MAT_TAB_GROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTab.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTab, selector: \"mat-tab\", inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], labelClass: \"labelClass\", bodyClass: \"bodyClass\" }, providers: [{ provide: MAT_TAB, useExisting: MatTab }], queries: [{ propertyName: \"templateLabel\", first: true, predicate: MAT_TAB_LABEL, descendants: true }, { propertyName: \"_explicitContent\", first: true, predicate: MAT_TAB_CONTENT, descendants: true, read: TemplateRef, static: true }], viewQueries: [{ propertyName: \"_implicitContent\", first: true, predicate: TemplateRef, descendants: true, static: true }], exportAs: [\"matTab\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\", changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTab, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab', inputs: ['disabled'], changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, exportAs: 'matTab', providers: [{ provide: MAT_TAB, useExisting: MatTab }], template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TAB_GROUP]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { templateLabel: [{\n                type: ContentChild,\n                args: [MAT_TAB_LABEL]\n            }], _explicitContent: [{\n                type: ContentChild,\n                args: [MAT_TAB_CONTENT, { read: TemplateRef, static: true }]\n            }], _implicitContent: [{\n                type: ViewChild,\n                args: [TemplateRef, { static: true }]\n            }], textLabel: [{\n                type: Input,\n                args: ['label']\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], labelClass: [{\n                type: Input\n            }], bodyClass: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)'),\n        ]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /** Subscription to events for when the tab body begins centering. */\n        this._centeringSub = Subscription.EMPTY;\n        /** Subscription to events for when the tab body finishes leaving from center position. */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        });\n        this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, deps: [{ token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: forwardRef(() => MatTabBody) }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabBodyPortal.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBodyPortal, selector: \"[matTabBodyHost]\", usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBodyPortal, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabBodyHost]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => MatTabBody)]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nclass _MatTabBodyBase {\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /** Subscription to the directionality change observable. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Emits when an animation on the tab is complete. */\n        this._translateTabComplete = new Subject();\n        /** Event emitted when the tab begins to animate towards the center as the active tab. */\n        this._onCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._beforeCentering = new EventEmitter();\n        /** Event emitted before the centering of the tab begins. */\n        this._afterLeavingCenter = new EventEmitter();\n        /** Event emitted when the tab completes its animation towards the center. */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /** Duration for the tab's animation. */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            });\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete\n            .pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))\n            .subscribe(event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        });\n    }\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n        return (position == 'center' || position == 'left-origin-center' || position == 'right-origin-center');\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabBodyBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabBodyBase, inputs: { _content: [\"content\", \"_content\"], origin: \"origin\", animationDuration: \"animationDuration\", position: \"position\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabBodyBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _onCentering: [{\n                type: Output\n            }], _beforeCentering: [{\n                type: Output\n            }], _afterLeavingCenter: [{\n                type: Output\n            }], _onCentered: [{\n                type: Output\n            }], _content: [{\n                type: Input,\n                args: ['content']\n            }], origin: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], position: [{\n                type: Input\n            }] } });\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nMatTabBody.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabBody, selector: \"mat-tab-body\", host: { classAttribute: \"mat-tab-body\" }, viewQueries: [{ propertyName: \"_portalHost\", first: true, predicate: CdkPortalOutlet, descendants: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"], directives: [{ type: MatTabBodyPortal, selector: \"[matTabBodyHost]\" }], animations: [matTabsAnimations.translateTab], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabBody, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-body', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, animations: [matTabsAnimations.translateTab], host: {\n                        'class': 'mat-tab-body',\n                    }, template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\"\\n     cdkScrollable>\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\", styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}.mat-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { _portalHost: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nconst _MatTabLabelWrapperBase = mixinDisabled(class {\n});\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperBase {\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLabelWrapper.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: { disabled: \"disabled\" }, host: { properties: { \"class.mat-tab-disabled\": \"disabled\", \"attr.aria-disabled\": \"!!disabled\" } }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLabelWrapper, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTabLabelWrapper]',\n                    inputs: ['disabled'],\n                    host: {\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[attr.aria-disabled]': '!!disabled',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n});\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nclass MatPaginatedTabHeader {\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /** The distance in pixels that the tab labels should be translated to the left. */\n        this._scrollDistance = 0;\n        /** Whether the header should scroll to the selected index after the view has been checked. */\n        this._selectedIndexChanged = false;\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        /** Whether the controls for pagination should be displayed */\n        this._showPaginationControls = false;\n        /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n        this._disableScrollAfter = true;\n        /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n        this._disableScrollBefore = true;\n        /** Stream that will stop the automated scrolling. */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /** Event emitted when the option is selected. */\n        this.selectFocusedIndex = new EventEmitter();\n        /** Event emitted when a label is focused. */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular(() => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => {\n                this._stopInterval();\n            });\n        });\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('before');\n        });\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            this._handlePaginatorPress('after');\n        });\n    }\n    ngAfterContentInit() {\n        const dirChange = this._dir ? this._dir.change : of('ltr');\n        const resize = this._viewportRuler.change(150);\n        const realign = () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        };\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withHomeAndEnd()\n            .withWrap();\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        // Note that we use `onStable` instead of `requestAnimationFrame`, because the latter\n        // can hold up tests that are in a background tab.\n        this._ngZone.onStable.pipe(take(1)).subscribe(realign);\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes, this._itemsResized())\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            // We need to defer this to give the browser some time to recalculate\n            // the element dimensions. The call has to be wrapped in `NgZone.run`,\n            // because the viewport change handler runs outside of Angular.\n            this._ngZone.run(() => {\n                Promise.resolve().then(() => {\n                    // Clamp the scroll distance, because it can change with the number of tabs.\n                    this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n                    realign();\n                });\n            });\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        });\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n        if (typeof ResizeObserver !== 'function') {\n            return EMPTY;\n        }\n        return this._items.changes.pipe(startWith(this._items), switchMap((tabItems) => new Observable((observer) => this._ngZone.runOutsideAngular(() => {\n            const resizeObserver = new ResizeObserver(() => {\n                observer.next();\n            });\n            tabItems.forEach(item => {\n                resizeObserver.observe(item.elementRef.nativeElement);\n            });\n            return () => {\n                resizeObserver.disconnect();\n            };\n        }))), \n        // Skip the first emit since the resize observer emits when an item\n        // is observed for new items when the tab is already inserted\n        skip(1));\n    }\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run(() => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this._tabListContainer.nativeElement;\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        const scrollDistance = this.scrollDistance;\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        if (this._platform.TRIDENT || this._platform.EDGE) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n        return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        const scrollAmount = ((direction == 'before' ? -1 : 1) * viewLength) / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        let labelBeforePos, labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            const isEnabled = this._tabListInner.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n        const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n        const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe(() => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatPaginatedTabHeader.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatedTabHeader, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disablePagination: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabHeaderBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabHeaderBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { disableRipple: [{\n                type: Input\n            }] } });\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabHeader, selector: \"mat-tab-header\", inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, host: { properties: { \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\" }, classAttribute: \"mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: MatTabLabelWrapper }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-header', inputs: ['selectedIndex'], outputs: ['selectFocusedIndex', 'indexFocused'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, host: {\n                        'class': 'mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    }, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [MatTabLabelWrapper, { descendants: false }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}), 'primary');\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /** All of the tabs that belong to the group. */\n        this._tabs = new QueryList();\n        /** The tab index that should be selected after the content has been checked. */\n        this._indexToSelect = 0;\n        /** Index of the tab that was focused last. */\n        this._lastFocusedTabIndex = null;\n        /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n        this._tabBodyWrapperHeight = 0;\n        /** Subscription to tabs being added/removed. */\n        this._tabsSubscription = Subscription.EMPTY;\n        /** Subscription to changes in the tab labels. */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._selectedIndex = null;\n        /** Position of the tab header. */\n        this.headerPosition = 'above';\n        /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n        this.selectedIndexChange = new EventEmitter();\n        /** Event emitted when focus has changed within a tab group. */\n        this.focusChange = new EventEmitter();\n        /** Event emitted when the body animation has completed */\n        this.animationDone = new EventEmitter();\n        /** Event emitted when the tab selection has changed. */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration =\n            defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n        this.disablePagination =\n            defaultConfig && defaultConfig.disablePagination != null\n                ? defaultConfig.disablePagination\n                : false;\n        this.dynamicHeight =\n            defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n        this.contentTabIndex = defaultConfig?.contentTabIndex ?? null;\n    }\n    /** Whether the tab group should grow to the size of the active tab. */\n    get dynamicHeight() {\n        return this._dynamicHeight;\n    }\n    set dynamicHeight(value) {\n        this._dynamicHeight = coerceBooleanProperty(value);\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n        return this._animationDuration;\n    }\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value + '') ? value + 'ms' : value;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n        return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n        this._contentTabIndex = coerceNumberProperty(value, null);\n    }\n    /** Background color of the tab group. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = (this._indexToSelect = this._clampTabIndex(this._indexToSelect));\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                // Preserve the height so page doesn't scroll up during tab change.\n                // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n                const wrapper = this._tabBodyWrapper.nativeElement;\n                wrapper.style.minHeight = wrapper.clientHeight + 'px';\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this._tabs.forEach((tab, index) => (tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                    // Clear the min-height, this was needed during tab change to avoid\n                    // unnecessary scrolling.\n                    this._tabBodyWrapper.nativeElement.style.minHeight = '';\n                }\n            });\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._lastFocusedTabIndex = null;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe(() => {\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this._tabs.toArray();\n                let selectedTab;\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        this._lastFocusedTabIndex = null;\n                        selectedTab = tabs[i];\n                        break;\n                    }\n                }\n                // If we haven't found an active tab and a tab exists at the selected index, it means\n                // that the active tab was swapped out. Since this won't be picked up by the rendering\n                // loop in `ngAfterContentChecked`, we need to sync it up manually.\n                if (!selectedTab && tabs[indexToSelect]) {\n                    Promise.resolve().then(() => {\n                        tabs[indexToSelect].isActive = true;\n                        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n                    });\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe((tabs) => {\n            this._tabs.reset(tabs.filter(tab => {\n                return tab._closestTabGroup === this || !tab._closestTabGroup;\n            }));\n            this._tabs.notifyOnChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        if (this._tabHeader) {\n            this._tabHeader.updatePagination();\n        }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n        const header = this._tabHeader;\n        if (header) {\n            header.focusIndex = index;\n        }\n    }\n    _focusChanged(index) {\n        this._lastFocusedTabIndex = index;\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n        const event = new MatTabChangeEvent();\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(tab, index) {\n        if (tab.disabled) {\n            return null;\n        }\n        const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n        return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n        // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n        // can cause the tab to be moved out from under the pointer, interrupting the\n        // click sequence (see #21898). We don't need to scroll the tab into view for\n        // such cases anyway, because it will be done when the tab becomes selected.\n        if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n            this._tabHeader.focusIndex = index;\n        }\n    }\n}\n_MatTabGroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabGroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabGroupBase, inputs: { dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", contentTabIndex: \"contentTabIndex\", disablePagination: \"disablePagination\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabGroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { dynamicHeight: [{\n                type: Input\n            }], selectedIndex: [{\n                type: Input\n            }], headerPosition: [{\n                type: Input\n            }], animationDuration: [{\n                type: Input\n            }], contentTabIndex: [{\n                type: Input\n            }], disablePagination: [{\n                type: Input\n            }], backgroundColor: [{\n                type: Input\n            }], selectedIndexChange: [{\n                type: Output\n            }], focusChange: [{\n                type: Output\n            }], animationDone: [{\n                type: Output\n            }], selectedTabChange: [{\n                type: Output\n            }] } });\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_TABS_CONFIG, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabGroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabGroup, selector: \"mat-tab-group\", inputs: { color: \"color\", disableRipple: \"disableRipple\" }, host: { properties: { \"class.mat-tab-group-dynamic-height\": \"dynamicHeight\", \"class.mat-tab-group-inverted-header\": \"headerPosition === \\\"below\\\"\" }, classAttribute: \"mat-tab-group\" }, providers: [\n        {\n            provide: MAT_TAB_GROUP,\n            useExisting: MatTabGroup,\n        },\n    ], queries: [{ propertyName: \"_allTabs\", predicate: MatTab, descendants: true }], viewQueries: [{ propertyName: \"_tabBodyWrapper\", first: true, predicate: [\"tabBodyWrapper\"], descendants: true }, { propertyName: \"_tabHeader\", first: true, predicate: [\"tabHeader\"], descendants: true }], exportAs: [\"matTabGroup\"], usesInheritance: true, ngImport: i0, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], components: [{ type: MatTabHeader, selector: \"mat-tab-header\", inputs: [\"selectedIndex\"], outputs: [\"selectFocusedIndex\", \"indexFocused\"] }, { type: MatTabBody, selector: \"mat-tab-body\" }], directives: [{ type: i3$1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: MatTabLabelWrapper, selector: \"[matTabLabelWrapper]\", inputs: [\"disabled\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i7.CdkMonitorFocus, selector: \"[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]\", outputs: [\"cdkFocusChange\"] }, { type: i3$1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i3$1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i7$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabGroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tab-group', exportAs: 'matTabGroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, inputs: ['color', 'disableRipple'], providers: [\n                        {\n                            provide: MAT_TAB_GROUP,\n                            useExisting: MatTabGroup,\n                        },\n                    ], host: {\n                        'class': 'mat-tab-group',\n                        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                        '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n                    }, template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple\\n       cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex === i\\\"\\n       [ngClass]=\\\"tab.labelClass\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\"\\n       (cdkFocusChange)=\\\"_tabFocusChanged($event, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\" [ngIfElse]=\\\"tabTextLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template #tabTextLabel>{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.tabindex]=\\\"(contentTabIndex != null && selectedIndex === i) ? contentTabIndex : null\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex === i\\\"\\n               [ngClass]=\\\"tab.bodyClass\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\", styles: [\".mat-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_TABS_CONFIG]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _allTabs: [{\n                type: ContentChildren,\n                args: [MatTab, { descendants: true }]\n            }], _tabBodyWrapper: [{\n                type: ViewChild,\n                args: ['tabBodyWrapper']\n            }], _tabHeader: [{\n                type: ViewChild,\n                args: ['tabHeader']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /** Theme color of the nav bar. */\n        this.color = 'primary';\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n        return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n        return this._disableRipple;\n    }\n    set disableRipple(value) {\n        this._disableRipple = coerceBooleanProperty(value);\n    }\n    _itemSelected() {\n        // noop\n    }\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this.updateActiveLink();\n        });\n        super.ngAfterContentInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n        if (!this._items) {\n            return;\n        }\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                if (this.tabPanel) {\n                    this.tabPanel._activeTabId = items[i].id;\n                }\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n    _getRole() {\n        return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n}\n_MatTabNavBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabNavBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabNavBase, inputs: { backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\", color: \"color\", tabPanel: \"tabPanel\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabNavBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { backgroundColor: [{\n                type: Input\n            }], disableRipple: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], tabPanel: [{\n                type: Input\n            }] } });\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i1$1.ViewportRuler }, { token: i3.Platform }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatTabNav.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNav, selector: \"[mat-tab-nav-bar]\", inputs: { color: \"color\" }, host: { properties: { \"attr.role\": \"_getRole()\", \"class.mat-tab-header-pagination-controls-enabled\": \"_showPaginationControls\", \"class.mat-tab-header-rtl\": \"_getLayoutDirection() == 'rtl'\", \"class.mat-primary\": \"color !== \\\"warn\\\" && color !== \\\"accent\\\"\", \"class.mat-accent\": \"color === \\\"accent\\\"\", \"class.mat-warn\": \"color === \\\"warn\\\"\" }, classAttribute: \"mat-tab-nav-bar mat-tab-header\" }, queries: [{ propertyName: \"_items\", predicate: i0.forwardRef(function () { return MatTabLink; }), descendants: true }], viewQueries: [{ propertyName: \"_inkBar\", first: true, predicate: MatInkBar, descendants: true, static: true }, { propertyName: \"_tabListContainer\", first: true, predicate: [\"tabListContainer\"], descendants: true, static: true }, { propertyName: \"_tabList\", first: true, predicate: [\"tabList\"], descendants: true, static: true }, { propertyName: \"_tabListInner\", first: true, predicate: [\"tabListInner\"], descendants: true, static: true }, { propertyName: \"_nextPaginator\", first: true, predicate: [\"nextPaginator\"], descendants: true }, { propertyName: \"_previousPaginator\", first: true, predicate: [\"previousPaginator\"], descendants: true }], exportAs: [\"matTabNavBar\", \"matTabNav\"], usesInheritance: true, ngImport: i0, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], directives: [{ type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i5.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: MatInkBar, selector: \"mat-ink-bar\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNav, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-tab-nav-bar]', exportAs: 'matTabNavBar, matTabNav', inputs: ['color'], host: {\n                        '[attr.role]': '_getRole()',\n                        'class': 'mat-tab-nav-bar mat-tab-header',\n                        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                        '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                        '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                        '[class.mat-accent]': 'color === \"accent\"',\n                        '[class.mat-warn]': 'color === \"warn\"',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, template: \"<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     tabindex=\\\"-1\\\"\\n     [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     [disabled]=\\\"_disableScrollBefore || null\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\" #tabListInner>\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<button class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     type=\\\"button\\\"\\n     mat-ripple\\n     [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     [disabled]=\\\"_disableScrollAfter || null\\\"\\n     tabindex=\\\"-1\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</button>\\n\", styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-tab-header-pagination::-moz-focus-inner{border:0}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i1$1.ViewportRuler }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { _items: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatTabLink), { descendants: true }]\n            }], _inkBar: [{\n                type: ViewChild,\n                args: [MatInkBar, { static: true }]\n            }], _tabListContainer: [{\n                type: ViewChild,\n                args: ['tabListContainer', { static: true }]\n            }], _tabList: [{\n                type: ViewChild,\n                args: ['tabList', { static: true }]\n            }], _tabListInner: [{\n                type: ViewChild,\n                args: ['tabListInner', { static: true }]\n            }], _nextPaginator: [{\n                type: ViewChild,\n                args: ['nextPaginator']\n            }], _previousPaginator: [{\n                type: ViewChild,\n                args: ['previousPaginator']\n            }] } });\n// Boilerplate for applying mixins to MatTabLink.\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(class {\n})));\n/** Base class with all of the `MatTabLink` functionality. */\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    constructor(_tabNavBar, \n    /** @docs-private */ elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /** Whether the tab link is active or not. */\n        this._isActive = false;\n        /** Unique id for the tab. */\n        this.id = `mat-tab-link-${nextUniqueId++}`;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /** Whether the link is active. */\n    get active() {\n        return this._isActive;\n    }\n    set active(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._isActive) {\n            this._isActive = newValue;\n            this._tabNavBar.updateActiveLink();\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled);\n    }\n    /** Focuses the tab link. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n        // Since we allow navigation through tabbing in the nav bar, we\n        // have to update the focused index whenever the link receives focus.\n        this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n        if (this._tabNavBar.tabPanel && event.keyCode === SPACE) {\n            this.elementRef.nativeElement.click();\n        }\n    }\n    _getAriaControls() {\n        return this._tabNavBar.tabPanel\n            ? this._tabNavBar.tabPanel?.id\n            : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n        if (this._tabNavBar.tabPanel) {\n            return this.active ? 'true' : 'false';\n        }\n        else {\n            return this.elementRef.nativeElement.getAttribute('aria-selected');\n        }\n    }\n    _getAriaCurrent() {\n        return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n        return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n        if (this._tabNavBar.tabPanel) {\n            return this._isActive ? 0 : -1;\n        }\n        else {\n            return this.tabIndex;\n        }\n    }\n}\n_MatTabLinkBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, deps: [{ token: _MatTabNavBase }, { token: i0.ElementRef }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatTabLinkBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTabLinkBase, inputs: { active: \"active\", id: \"id\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTabLinkBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: _MatTabNavBase }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { active: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, deps: [{ token: MatTabNav }, { token: i0.ElementRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: 'tabindex', attribute: true }, { token: i7.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatTabLink.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabLink, selector: \"[mat-tab-link], [matTabLink]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.aria-controls\": \"_getAriaControls()\", \"attr.aria-current\": \"_getAriaCurrent()\", \"attr.aria-disabled\": \"disabled\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.id\": \"id\", \"attr.tabIndex\": \"_getTabIndex()\", \"attr.role\": \"_getRole()\", \"class.mat-tab-disabled\": \"disabled\", \"class.mat-tab-label-active\": \"active\" }, classAttribute: \"mat-tab-link mat-focus-indicator\" }, exportAs: [\"matTabLink\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabLink, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-tab-link], [matTabLink]',\n                    exportAs: 'matTabLink',\n                    inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                    host: {\n                        'class': 'mat-tab-link mat-focus-indicator',\n                        '[attr.aria-controls]': '_getAriaControls()',\n                        '[attr.aria-current]': '_getAriaCurrent()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.id]': 'id',\n                        '[attr.tabIndex]': '_getTabIndex()',\n                        '[attr.role]': '_getRole()',\n                        '[class.mat-tab-disabled]': 'disabled',\n                        '[class.mat-tab-label-active]': 'active',\n                        '(focus)': '_handleFocus()',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: MatTabNav }, { type: i0.ElementRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i7.FocusMonitor }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; } });\n/**\n * Tab panel component associated with MatTabNav.\n */\nclass MatTabNavPanel {\n    constructor() {\n        /** Unique id for the tab panel. */\n        this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n}\nMatTabNavPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, deps: [], target: i0.ɵɵFactoryTarget.Component });\nMatTabNavPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTabNavPanel, selector: \"mat-tab-nav-panel\", inputs: { id: \"id\" }, host: { attributes: { \"role\": \"tabpanel\" }, properties: { \"attr.aria-labelledby\": \"_activeTabId\", \"attr.id\": \"id\" }, classAttribute: \"mat-tab-nav-panel\" }, exportAs: [\"matTabNavPanel\"], ngImport: i0, template: '<ng-content></ng-content>', isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabNavPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-tab-nav-panel',\n                    exportAs: 'matTabNavPanel',\n                    template: '<ng-content></ng-content>',\n                    host: {\n                        '[attr.aria-labelledby]': '_activeTabId',\n                        '[attr.id]': 'id',\n                        'class': 'mat-tab-nav-panel',\n                        'role': 'tabpanel',\n                    },\n                    encapsulation: ViewEncapsulation.None,\n                    changeDetection: ChangeDetectionStrategy.OnPush,\n                }]\n        }], propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTabsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, declarations: [MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatInkBar,\n        MatTabLabelWrapper,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabBody,\n        MatTabBodyPortal,\n        MatTabHeader,\n        MatTabContent], imports: [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule], exports: [MatCommonModule,\n        MatTabGroup,\n        MatTabLabel,\n        MatTab,\n        MatTabNav,\n        MatTabNavPanel,\n        MatTabLink,\n        MatTabContent] });\nMatTabsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTabsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MatCommonModule,\n                        PortalModule,\n                        MatRippleModule,\n                        ObserversModule,\n                        A11yModule,\n                    ],\n                    // Don't export all components because some are only to be used internally.\n                    exports: [\n                        MatCommonModule,\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabContent,\n                    ],\n                    declarations: [\n                        MatTabGroup,\n                        MatTabLabel,\n                        MatTab,\n                        MatInkBar,\n                        MatTabLabelWrapper,\n                        MatTabNav,\n                        MatTabNavPanel,\n                        MatTabLink,\n                        MatTabBody,\n                        MatTabBodyPortal,\n                        MatTabHeader,\n                        MatTabContent,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}