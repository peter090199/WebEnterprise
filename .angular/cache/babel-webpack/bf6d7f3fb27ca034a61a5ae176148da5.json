{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/grid-list\";\nimport * as i4 from \"@angular/common\";\nfunction GridComponent_mat_grid_tile_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-grid-tile\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tile_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background\", tile_r1.color);\n    i0.ɵɵproperty(\"colspan\", tile_r1.cols)(\"rowspan\", tile_r1.rows);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tile_r1.text, \" \");\n  }\n}\nexport let GridComponent = /*#__PURE__*/(() => {\n  class GridComponent {\n    constructor() {\n      this.tiles = [{\n        text: 'One',\n        cols: 3,\n        rows: 1,\n        color: 'lightblue'\n      }, {\n        text: 'Two',\n        cols: 1,\n        rows: 2,\n        color: 'lightgreen'\n      }, {\n        text: 'Three',\n        cols: 1,\n        rows: 1,\n        color: 'lightpink'\n      }, {\n        text: 'Four',\n        cols: 2,\n        rows: 1,\n        color: '#DDBDF1'\n      }];\n    }\n  }\n  GridComponent.ɵfac = function GridComponent_Factory(t) {\n    return new (t || GridComponent)();\n  };\n  GridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GridComponent,\n    selectors: [[\"app-grid\"]],\n    decls: 34,\n    vars: 1,\n    consts: [[\"fxLayout\", \"row\"], [\"fxFlex.gt-sm\", \"100%\"], [\"href\", \"https://material.io/guidelines/components/grid-lists.html\"], [\"cols\", \"4\", \"rowHeight\", \"100px\"], [3, \"colspan\", \"rowspan\", \"background\", 4, \"ngFor\", \"ngForOf\"], [\"cols\", \"2\", \"rowHeight\", \"2:1\"], [3, \"colspan\", \"rowspan\"]],\n    template: function GridComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"mat-card\");\n        i0.ɵɵelementStart(3, \"mat-card-content\");\n        i0.ɵɵelementStart(4, \"mat-card-title\");\n        i0.ɵɵtext(5, \"Fixed height grid-list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n        i0.ɵɵelementStart(7, \"code\");\n        i0.ɵɵtext(8, \"<mat-grid-list>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. \");\n        i0.ɵɵelementStart(10, \"code\");\n        i0.ɵɵelementStart(11, \"a\", 2);\n        i0.ɵɵtext(12, \"Official Doc here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"mat-grid-list\", 3);\n        i0.ɵɵtemplate(14, GridComponent_mat_grid_tile_14_Template, 2, 5, \"mat-grid-tile\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-card\");\n        i0.ɵɵelementStart(16, \"mat-card-content\");\n        i0.ɵɵelementStart(17, \"mat-card-title\");\n        i0.ɵɵtext(18, \"Basic grid-list\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-card-subtitle\");\n        i0.ɵɵelementStart(20, \"code\");\n        i0.ɵɵtext(21, \"<mat-grid-list>\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22, \" is a two-dimensional list view that arranges cells into grid-based layout. See Material Design spec. \");\n        i0.ɵɵelementStart(23, \"a\", 2);\n        i0.ɵɵtext(24, \"here\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-grid-list\", 5);\n        i0.ɵɵelementStart(26, \"mat-grid-tile\");\n        i0.ɵɵtext(27, \"1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-grid-tile\");\n        i0.ɵɵtext(29, \"2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-grid-tile\");\n        i0.ɵɵtext(31, \"3\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"mat-grid-tile\");\n        i0.ɵɵtext(33, \"4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tiles);\n      }\n    },\n    directives: [i1.DefaultLayoutDirective, i1.DefaultFlexDirective, i2.MatCard, i2.MatCardContent, i2.MatCardTitle, i2.MatCardSubtitle, i3.MatGridList, i4.NgForOf, i3.MatGridTile],\n    styles: [\"mat-grid-tile[_ngcontent-%COMP%]{background:lightblue}\"]\n  });\n  return GridComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}