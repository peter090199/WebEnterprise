{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/Services/Images/image.service\";\nimport * as i2 from \"src/app/Services/Global/notifications.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/button\";\nfunction BlogImageUIComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"img\", 20);\n    i0.ɵɵelementStart(2, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function BlogImageUIComponent_div_13_div_1_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const i_r4 = restoredCtx.index;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.removeImage(i_r4);\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const img_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", img_r3, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction BlogImageUIComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, BlogImageUIComponent_div_13_div_1_Template, 5, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.imagePreviews);\n  }\n}\nfunction BlogImageUIComponent_div_23_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function BlogImageUIComponent_div_23_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const i_r8 = i0.ɵɵnextContext().index;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.removeStat(i_r8);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction BlogImageUIComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 23);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-form-field\", 23);\n    i0.ɵɵelementStart(6, \"mat-label\");\n    i0.ɵɵtext(7, \"Label\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, BlogImageUIComponent_div_23_button_9_Template, 3, 0, \"button\", 26);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r8 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", i_r8);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.statsArray.length > 1);\n  }\n}\nexport let BlogImageUIComponent = /*#__PURE__*/(() => {\n  class BlogImageUIComponent {\n    constructor(imageService, notificationService, data, fb) {\n      this.imageService = imageService;\n      this.notificationService = notificationService;\n      this.data = data;\n      this.fb = fb;\n      this.selectedFiles = [];\n      this.imagePreviews = [];\n      this.authToken = '';\n      this.isUploading = false;\n      this.btnSave = 'Save';\n      this.transNo = this.data.transNo;\n    }\n    ngOnInit() {\n      var _a, _b;\n      this.authToken = (_a = localStorage.getItem(\"token\")) !== null && _a !== void 0 ? _a : '';\n      this.blogForm = this.fb.group({\n        title: ['', Validators.required],\n        description: ['', Validators.required],\n        file_path: [''],\n        stats: this.fb.array([this.createStat()])\n      });\n      if ((_b = this.data) === null || _b === void 0 ? void 0 : _b.transCode) {\n        this.btnSave = \"Update\";\n        this.populateFormData();\n      }\n    }\n    // Populate form when editing\n    populateFormData() {\n      this.blogForm.patchValue({\n        title: this.data.title,\n        description: this.data.description,\n        file_path: this.data.file_path\n      });\n      if (this.data.file_path) {\n        this.imagePreviews = [this.data.file_path];\n      }\n    }\n    // Getter for form array\n    get statsArray() {\n      return this.blogForm.get('stats');\n    }\n    // Create new stat form group\n    createStat() {\n      return this.fb.group({\n        value: ['', Validators.required],\n        label: ['', Validators.required]\n      });\n    }\n    addStat() {\n      this.statsArray.push(this.createStat());\n    }\n    removeStat(index) {\n      if (this.statsArray.length > 1) {\n        this.statsArray.removeAt(index);\n      } else {\n        this.notificationService.toastrWarning(\"At least one statistic is required.\");\n      }\n    }\n    // Handle file selection\n    onFileSelect(event) {\n      const input = event.target;\n      if (input.files) {\n        this.selectedFiles = Array.from(input.files);\n        this.imagePreviews = [];\n        this.selectedFiles.forEach(file => {\n          const reader = new FileReader();\n          reader.onload = e => {\n            var _a;\n            if ((_a = e.target) === null || _a === void 0 ? void 0 : _a.result) {\n              this.imagePreviews.push(e.target.result);\n            }\n          };\n          reader.readAsDataURL(file);\n        });\n      }\n    }\n    removeImage(index) {\n      this.selectedFiles.splice(index, 1);\n      this.imagePreviews.splice(index, 1);\n    }\n    uploadFiles() {\n      var _a;\n      if (this.blogForm.invalid) {\n        this.notificationService.toastrWarning(\"Please fill in all required fields.\");\n        return;\n      }\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => {\n        formData.append('files[]', file);\n      });\n      // formData.append('transCode', this.data.transCode);\n      formData.append('transNo', this.data.transNo);\n      formData.append('title', this.blogForm.value.title);\n      formData.append('description', this.blogForm.value.description);\n      formData.append('stats', JSON.stringify(this.statsArray.value));\n      this.isUploading = true;\n      if ((_a = this.data) === null || _a === void 0 ? void 0 : _a.transCode) {\n        formData.append('transCode', this.data.transCode);\n        this.imageService.updateImages(formData).subscribe({\n          next: response => {\n            this.notificationService.toastrSuccess(response.message || \"Data updated successfully.\");\n            this.resetForm();\n          },\n          error: error => {\n            var _a;\n            console.error('Update failed:', error);\n            this.notificationService.toastrWarning(((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || \"Update failed. Please try again.\");\n            this.isUploading = false;\n          }\n        });\n      } else {\n        // Create new image entry\n        this.imageService.uploadImages(formData).subscribe({\n          next: response => {\n            this.notificationService.toastrSuccess(response.message || \"Images uploaded successfully.\");\n            this.resetForm();\n          },\n          error: error => {\n            var _a;\n            console.error('Upload failed:', error);\n            this.notificationService.toastrWarning(((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || \"Upload failed. Please try again.\");\n            this.isUploading = false;\n          }\n        });\n      }\n    }\n    uploadFilesxxx() {\n      var _a;\n      if (this.blogForm.invalid) {\n        this.notificationService.toastrWarning(\"Please fill in all required fields.\");\n        return;\n      }\n      const formData = new FormData();\n      this.selectedFiles.forEach(file => {\n        formData.append('files[]', file);\n      });\n      formData.append('transNo', this.transNo);\n      formData.append('title', this.blogForm.value.title);\n      formData.append('description', this.blogForm.value.description);\n      formData.append('stats', JSON.stringify(this.statsArray.value));\n      this.isUploading = true;\n      // If updating (transCode exists), use update API\n      if ((_a = this.data) === null || _a === void 0 ? void 0 : _a.transCode) {\n        formData.append('transCode', this.data.transCode);\n        this.imageService.uploadImages(formData).subscribe({\n          next: response => {\n            this.notificationService.toastrSuccess(response.message || \"Image updated successfully.\");\n            this.resetForm();\n          },\n          error: error => {\n            var _a;\n            console.error('Update failed:', error);\n            this.notificationService.toastrWarning(((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || \"Update failed. Please try again.\");\n            this.isUploading = false;\n          }\n        });\n      }\n      // Otherwise, create new entry\n      else {\n        this.imageService.uploadImages(formData).subscribe({\n          next: response => {\n            this.notificationService.toastrSuccess(response.message || \"Images uploaded successfully.\");\n            this.resetForm();\n          },\n          error: error => {\n            var _a;\n            console.error('Upload failed:', error);\n            this.notificationService.toastrWarning(((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) || \"Upload failed. Please try again.\");\n            this.isUploading = false;\n          }\n        });\n      }\n    }\n    resetForm() {\n      this.selectedFiles = [];\n      this.imagePreviews = [];\n      this.blogForm.reset();\n      this.statsArray.clear();\n      this.isUploading = false;\n      // Reinitialize default stats\n      this.statsArray.push(this.createStat());\n    }\n  }\n  BlogImageUIComponent.ɵfac = function BlogImageUIComponent_Factory(t) {\n    return new (t || BlogImageUIComponent)(i0.ɵɵdirectiveInject(i1.ImageService), i0.ɵɵdirectiveInject(i2.NotificationsService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  BlogImageUIComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BlogImageUIComponent,\n    selectors: [[\"app-blog-image-ui\"]],\n    decls: 31,\n    vars: 6,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"form-container\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\"], [1, \"file-upload\"], [\"type\", \"file\", \"accept\", \"image/*\", \"id\", \"fileInput\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [\"for\", \"fileInput\", 1, \"upload-btn\"], [\"color\", \"primary\"], [\"class\", \"image-preview-container\", 4, \"ngIf\"], [\"appearance\", \"standard\", 1, \"full-width\"], [\"matInput\", \"\", \"formControlName\", \"title\", \"required\", \"\"], [\"matInput\", \"\", \"formControlName\", \"description\", \"rows\", \"4\", \"required\", \"\"], [\"formArrayName\", \"stats\"], [\"class\", \"stat-item\", 3, \"formGroupName\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [1, \"button-end\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"mat-dialog-close\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"submit-btn\", 3, \"disabled\", \"click\"], [1, \"image-preview-container\"], [\"class\", \"image-preview\", 4, \"ngFor\", \"ngForOf\"], [1, \"image-preview\"], [\"alt\", \"Selected Image\", 3, \"src\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"stat-item\", 3, \"formGroupName\"], [\"appearance\", \"standard\", 1, \"half-width\"], [\"matInput\", \"\", \"formControlName\", \"value\", \"placeholder\", \"Enter value\"], [\"matInput\", \"\", \"formControlName\", \"label\", \"placeholder\", \"Enter label\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", 3, \"click\", 4, \"ngIf\"]],\n    template: function BlogImageUIComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card-header\");\n        i0.ɵɵelementStart(1, \"h2\", 0);\n        i0.ɵɵtext(2, \"Upload Images\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mat-divider\");\n        i0.ɵɵelementStart(4, \"mat-card-content\", 1);\n        i0.ɵɵelementStart(5, \"form\", 2);\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"change\", function BlogImageUIComponent_Template_input_change_7_listener($event) {\n          return ctx.onFileSelect($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"label\", 5);\n        i0.ɵɵelementStart(9, \"mat-icon\", 6);\n        i0.ɵɵtext(10, \"cloud_upload\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \" Upload Images \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"br\");\n        i0.ɵɵtemplate(13, BlogImageUIComponent_div_13_Template, 2, 1, \"div\", 7);\n        i0.ɵɵelementStart(14, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(19, \"mat-label\");\n        i0.ɵɵtext(20, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"textarea\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 11);\n        i0.ɵɵtemplate(23, BlogImageUIComponent_div_23_Template, 10, 2, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function BlogImageUIComponent_Template_button_click_24_listener() {\n          return ctx.addStat();\n        });\n        i0.ɵɵtext(25, \"Add Stat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"mat-card-footer\", 14);\n        i0.ɵɵelementStart(27, \"button\", 15);\n        i0.ɵɵtext(28, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function BlogImageUIComponent_Template_button_click_29_listener() {\n          return ctx.uploadFiles();\n        });\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.blogForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.imagePreviews.length);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statsArray.controls);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.blogForm.invalid || ctx.isUploading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.btnSave, \" \");\n      }\n    },\n    directives: [i4.MatCardHeader, i5.MatDialogTitle, i6.MatDivider, i4.MatCardContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i7.MatIcon, i8.NgIf, i9.MatFormField, i9.MatLabel, i10.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i3.FormArrayName, i8.NgForOf, i11.MatButton, i4.MatCardFooter, i5.MatDialogClose, i3.FormGroupName],\n    styles: [\".image-preview-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;grid-gap:10px;gap:10px;max-height:300px;overflow-y:auto;padding:10px;border:1px solid #ddd;border-radius:8px}.image-preview[_ngcontent-%COMP%]{width:100%;height:100%;overflow:hidden;border-radius:10px;box-shadow:2px 2px 10px #0003;position:relative}.image-preview[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;max-height:500px;-o-object-fit:cover;object-fit:cover}@media (max-width: 600px){.image-preview[_ngcontent-%COMP%]{width:80px;height:80px}}@media (max-width: 400px){.image-preview[_ngcontent-%COMP%]{width:70px;height:70px}}.stats-card[_ngcontent-%COMP%]{padding:20px}.stat-item[_ngcontent-%COMP%]{display:flex;grid-gap:10px;gap:10px;align-items:center;margin-bottom:10px}mat-form-field[_ngcontent-%COMP%]{width:100%}mat-icon[_ngcontent-%COMP%]{cursor:pointer}\"]\n  });\n  return BlogImageUIComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}