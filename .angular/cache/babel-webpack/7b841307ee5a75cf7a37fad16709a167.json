{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/Services/signIn/sig-in.service\";\nimport * as i4 from \"src/app/Services/Global/notifications.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/progress-bar\";\nfunction SignInUIComponent_mat_progress_bar_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-bar\", 15);\n  }\n}\nfunction SignInUIComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Username is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignInUIComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Password is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let SignInUIComponent = /*#__PURE__*/(() => {\n  class SignInUIComponent {\n    constructor(fb, router, sigInService, notificationService) {\n      this.fb = fb;\n      this.router = router;\n      this.sigInService = sigInService;\n      this.notificationService = notificationService;\n      this.isLoading = false;\n      this.hide = true; // For password visibility toggle\n      this.checked = false; // Remember me checkbox\n      this.passwordVisible = false;\n      this.status = \"\";\n    }\n    ngOnInit() {\n      this.initializeForm();\n    }\n    refreshHomePage() {\n      this.router.navigate(['/']).then(() => {\n        window.location.reload();\n      });\n    }\n    // Initialize the login form\n    initializeForm() {\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required]],\n        password: ['', [Validators.required\n        //  Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$')\n        ]]\n      });\n    }\n    simulateLogin(email, password) {\n      return new Promise(resolve => {\n        setTimeout(() => {\n          // Simulate incorrect password (replace with real validation logic)\n          resolve(password === 'correct-password');\n        }, 1000);\n      });\n    }\n    togglePasswordVisibility() {\n      this.passwordVisible = !this.passwordVisible;\n    }\n    // Handle form submission\n    onSubmit() {\n      if (this.loginForm.valid) {\n        const {\n          username,\n          password\n        } = this.loginForm.value;\n        this.isLoading = true; // Start loading indicator\n        this.sigInService.signin(username, password).subscribe({\n          next: res => {\n            if (res.success === true) {\n              if (res.message == 0) {\n                this.router.navigate(['/home']);\n              } else {\n                this.router.navigate(['/home']);\n              }\n              this.loginForm.reset();\n              this.isLoading = false;\n            } else {\n              this.isLoading = false;\n              this.notificationService.toastPopUpError(res.message);\n            }\n          },\n          error: err => {\n            if (err.status === 401) {\n              this.notificationService.toastrError(err.error);\n            } else {\n              this.notificationService.toastPopUpError(err.message);\n            }\n            this.isLoading = false; // Stop loading on error\n          },\n          complete: () => {\n            this.isLoading = false; // Stop loading on completion\n          }\n        });\n      }\n    }\n  }\n  SignInUIComponent.ɵfac = function SignInUIComponent_Factory(t) {\n    return new (t || SignInUIComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SigInService), i0.ɵɵdirectiveInject(i4.NotificationsService));\n  };\n  SignInUIComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignInUIComponent,\n    selectors: [[\"app-sign-in-ui\"]],\n    decls: 29,\n    vars: 7,\n    consts: [[1, \"login-container\"], [1, \"mat-card\", 2, \"border-radius\", \"10px\"], [\"mode\", \"indeterminate\", \"color\", \"primary\", 4, \"ngIf\"], [2, \"text-align\", \"left\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"standard\", 1, \"full-width\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Enter your username\", \"type\", \"text\", \"formControlName\", \"username\", \"required\", \"\"], [4, \"ngIf\"], [\"matInput\", \"\", \"formControlName\", \"password\", \"required\", \"\", \"pattern\", \"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\", \"placeholder\", \"Enter your password\", 3, \"type\"], [\"matSuffix\", \"\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"spacer-top\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 1, \"signin-button\", 3, \"disabled\"], [1, \"links\"], [\"routerLink\", \"/\"], [\"mode\", \"indeterminate\", \"color\", \"primary\"]],\n    template: function SignInUIComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"mat-card-content\");\n        i0.ɵɵtemplate(3, SignInUIComponent_mat_progress_bar_3_Template, 1, 0, \"mat-progress-bar\", 2);\n        i0.ɵɵelementStart(4, \"h2\", 3);\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function SignInUIComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-icon\", 6);\n        i0.ɵɵtext(11, \"person\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 7);\n        i0.ɵɵtemplate(13, SignInUIComponent_mat_error_13_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(15, \"mat-label\");\n        i0.ɵɵtext(16, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-icon\", 6);\n        i0.ɵɵtext(18, \"lock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 9);\n        i0.ɵɵelementStart(20, \"mat-icon\", 10);\n        i0.ɵɵlistener(\"click\", function SignInUIComponent_Template_mat_icon_click_20_listener() {\n          return ctx.togglePasswordVisibility();\n        });\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, SignInUIComponent_mat_error_22_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"div\", 11);\n        i0.ɵɵelementStart(24, \"button\", 12);\n        i0.ɵɵtext(25, \" LOGIN \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 13);\n        i0.ɵɵelementStart(27, \"a\", 14);\n        i0.ɵɵtext(28, \"Back to home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_5_0;\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx.loginForm.get(\"username\")) == null ? null : tmp_2_0.hasError(\"required\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"type\", ctx.passwordVisible ? \"text\" : \"password\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.passwordVisible ? \"visibility_off\" : \"visibility\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_5_0.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.isLoading || !ctx.loginForm.valid);\n      }\n    },\n    directives: [i5.MatCard, i5.MatCardContent, i6.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.MatFormField, i7.MatLabel, i8.MatIcon, i7.MatPrefix, i9.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i1.PatternValidator, i7.MatSuffix, i10.MatButton, i2.RouterLinkWithHref, i11.MatProgressBar, i7.MatError],\n    styles: [\".login-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:100vh;padding:0}.width2[_ngcontent-%COMP%]{margin-bottom:20px}.agreement-section[_ngcontent-%COMP%]{font-size:.9em;color:#555;margin:10px}.full-width[_ngcontent-%COMP%]{width:100%}.signin-button[_ngcontent-%COMP%]{width:100%}@media (max-width: 600px){.login-container[_ngcontent-%COMP%]{padding:5px}.login-card[_ngcontent-%COMP%]{max-height:90vh;border-radius:10px}.signin-button[_ngcontent-%COMP%]{margin-top:2px}}\"]\n  });\n  return SignInUIComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}