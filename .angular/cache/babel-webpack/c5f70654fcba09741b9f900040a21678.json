{"ast":null,"code":"import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, InjectFlags, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nfunction MatBottomSheetContainer_ng_template_0_Template(rf, ctx) {}\nconst matBottomSheetAnimations = {\n  /** Animation that shows and hides a bottom sheet. */\n  bottomSheetState: trigger('state', [state('void, hidden', style({\n    transform: 'translateY(100%)'\n  })), state('visible', style({\n    transform: 'translateY(0%)'\n  })), transition('visible => void, visible => hidden', group([animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`), query('@*', animateChild(), {\n    optional: true\n  })])), transition('void => visible', group([animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`), query('@*', animateChild(), {\n    optional: true\n  })]))])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n  constructor() {\n    /** Data being injected into the child component. */\n    this.data = null;\n    /** Whether the bottom sheet has a backdrop. */\n    this.hasBackdrop = true;\n    /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n    this.disableClose = false;\n    /** Aria label to assign to the bottom sheet element. */\n    this.ariaLabel = null;\n    /**\n     * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.closeOnNavigation = true;\n    // Note that this is set to 'dialog' by default, because while the a11y recommendations\n    // are to focus the first focusable element, doing so prevents screen readers from reading out the\n    // rest of the bottom sheet content.\n    /**\n     * Where the bottom sheet should focus on open.\n     * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n     * AutoFocusTarget instead.\n     */\n    this.autoFocus = 'dialog';\n    /**\n     * Whether the bottom sheet should restore focus to the\n     * previously-focused element, after it's closed.\n     */\n    this.restoreFocus = true;\n  }\n}\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n  constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, _interactivityChecker, _ngZone, breakpointObserver, document, /** The bottom sheet configuration. */\n  bottomSheetConfig) {\n    super();\n    this._elementRef = _elementRef;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._focusTrapFactory = _focusTrapFactory;\n    this._interactivityChecker = _interactivityChecker;\n    this._ngZone = _ngZone;\n    this.bottomSheetConfig = bottomSheetConfig;\n    /** The state of the bottom sheet animations. */\n    this._animationState = 'void';\n    /** Emits whenever the state of the animation changes. */\n    this._animationStateChanged = new EventEmitter();\n    /** Element that was focused before the bottom sheet was opened. */\n    this._elementFocusedBeforeOpened = null;\n    /**\n     * Attaches a DOM portal to the bottom sheet container.\n     * @deprecated To be turned into a method.\n     * @breaking-change 10.0.0\n     */\n    this.attachDomPortal = portal => {\n      this._validatePortalAttached();\n      this._setPanelClass();\n      this._savePreviouslyFocusedElement();\n      return this._portalOutlet.attachDomPortal(portal);\n    };\n    this._document = document;\n    this._breakpointSubscription = breakpointObserver.observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge]).subscribe(() => {\n      this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n      this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n      this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n    });\n  }\n  /** Attach a component portal as content to this bottom sheet container. */\n  attachComponentPortal(portal) {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n  /** Attach a template portal as content to this bottom sheet container. */\n  attachTemplatePortal(portal) {\n    this._validatePortalAttached();\n    this._setPanelClass();\n    this._savePreviouslyFocusedElement();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n  /** Begin animation of bottom sheet entrance into view. */\n  enter() {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n  /** Begin animation of the bottom sheet exiting from view. */\n  exit() {\n    if (!this._destroyed) {\n      this._animationState = 'hidden';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  ngOnDestroy() {\n    this._breakpointSubscription.unsubscribe();\n    this._destroyed = true;\n  }\n  _onAnimationDone(event) {\n    if (event.toState === 'hidden') {\n      this._restoreFocus();\n    } else if (event.toState === 'visible') {\n      this._trapFocus();\n    }\n    this._animationStateChanged.emit(event);\n  }\n  _onAnimationStart(event) {\n    this._animationStateChanged.emit(event);\n  }\n  _toggleClass(cssClass, add) {\n    this._elementRef.nativeElement.classList.toggle(cssClass, add);\n  }\n  _validatePortalAttached() {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempting to attach bottom sheet content after content is already attached');\n    }\n  }\n  _setPanelClass() {\n    const element = this._elementRef.nativeElement;\n    element.classList.add(...coerceArray(this.bottomSheetConfig.panelClass || []));\n  }\n  /**\n   * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n   * attribute to forcefully focus it. The attribute is removed after focus is moved.\n   * @param element The element to focus.\n   */\n  _forceFocus(element, options) {\n    if (!this._interactivityChecker.isFocusable(element)) {\n      element.tabIndex = -1;\n      // The tabindex attribute should be removed to avoid navigating to that element again\n      this._ngZone.runOutsideAngular(() => {\n        const callback = () => {\n          element.removeEventListener('blur', callback);\n          element.removeEventListener('mousedown', callback);\n          element.removeAttribute('tabindex');\n        };\n        element.addEventListener('blur', callback);\n        element.addEventListener('mousedown', callback);\n      });\n    }\n    element.focus(options);\n  }\n  /**\n   * Focuses the first element that matches the given selector within the focus trap.\n   * @param selector The CSS selector for the element to set focus to.\n   */\n  _focusByCssSelector(selector, options) {\n    let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n    if (elementToFocus) {\n      this._forceFocus(elementToFocus, options);\n    }\n  }\n  /**\n   * Moves the focus inside the focus trap. When autoFocus is not set to 'bottom-sheet',\n   * if focus cannot be moved then focus will go to the bottom sheet container.\n   */\n  _trapFocus() {\n    const element = this._elementRef.nativeElement;\n    if (!this._focusTrap) {\n      this._focusTrap = this._focusTrapFactory.create(element);\n    }\n    // If were to attempt to focus immediately, then the content of the bottom sheet would not\n    // yet be ready in instances where change detection has to run first. To deal with this,\n    // we simply wait for the microtask queue to be empty when setting focus when autoFocus\n    // isn't set to bottom sheet. If the element inside the bottom sheet can't be focused,\n    // then the container is focused so the user can't tab into other elements behind it.\n    switch (this.bottomSheetConfig.autoFocus) {\n      case false:\n      case 'dialog':\n        const activeElement = _getFocusedElementPierceShadowDom();\n        // Ensure that focus is on the bottom sheet container. It's possible that a different\n        // component tried to move focus while the open animation was running. See:\n        // https://github.com/angular/components/issues/16215. Note that we only want to do this\n        // if the focus isn't inside the bottom sheet already, because it's possible that the\n        // consumer specified `autoFocus` in order to move focus themselves.\n        if (activeElement !== element && !element.contains(activeElement)) {\n          element.focus();\n        }\n        break;\n      case true:\n      case 'first-tabbable':\n        this._focusTrap.focusInitialElementWhenReady();\n        break;\n      case 'first-heading':\n        this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n        break;\n      default:\n        this._focusByCssSelector(this.bottomSheetConfig.autoFocus);\n        break;\n    }\n  }\n  /** Restores focus to the element that was focused before the bottom sheet was opened. */\n  _restoreFocus() {\n    const toFocus = this._elementFocusedBeforeOpened;\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n      const activeElement = _getFocusedElementPierceShadowDom();\n      const element = this._elementRef.nativeElement;\n      // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {\n        toFocus.focus();\n      }\n    }\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n  /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n  _savePreviouslyFocusedElement() {\n    this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n    // The `focus` method isn't available during server-side rendering.\n    if (this._elementRef.nativeElement.focus) {\n      this._ngZone.runOutsideAngular(() => {\n        Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n      });\n    }\n  }\n}\nMatBottomSheetContainer.ɵfac = function MatBottomSheetContainer_Factory(t) {\n  return new (t || MatBottomSheetContainer)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.FocusTrapFactory), i0.ɵɵdirectiveInject(i1.InteractivityChecker), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.BreakpointObserver), i0.ɵɵdirectiveInject(DOCUMENT, 8), i0.ɵɵdirectiveInject(MatBottomSheetConfig));\n};\nMatBottomSheetContainer.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatBottomSheetContainer,\n  selectors: [[\"mat-bottom-sheet-container\"]],\n  viewQuery: function MatBottomSheetContainer_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(CdkPortalOutlet, 7);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    }\n  },\n  hostAttrs: [\"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-modal\", \"true\", 1, \"mat-bottom-sheet-container\"],\n  hostVars: 2,\n  hostBindings: function MatBottomSheetContainer_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵsyntheticHostListener(\"@state.start\", function MatBottomSheetContainer_animation_state_start_HostBindingHandler($event) {\n        return ctx._onAnimationStart($event);\n      })(\"@state.done\", function MatBottomSheetContainer_animation_state_done_HostBindingHandler($event) {\n        return ctx._onAnimationDone($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵattribute(\"aria-label\", ctx.bottomSheetConfig == null ? null : ctx.bottomSheetConfig.ariaLabel);\n      i0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 1,\n  vars: 0,\n  consts: [[\"cdkPortalOutlet\", \"\"]],\n  template: function MatBottomSheetContainer_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, MatBottomSheetContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    }\n  },\n  directives: [i4.CdkPortalOutlet],\n  styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matBottomSheetAnimations.bottomSheetState]\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheetContainer, [{\n    type: Component,\n    args: [{\n      selector: 'mat-bottom-sheet-container',\n      changeDetection: ChangeDetectionStrategy.Default,\n      encapsulation: ViewEncapsulation.None,\n      animations: [matBottomSheetAnimations.bottomSheetState],\n      host: {\n        'class': 'mat-bottom-sheet-container',\n        'tabindex': '-1',\n        'role': 'dialog',\n        'aria-modal': 'true',\n        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n        '[@state]': '_animationState',\n        '(@state.start)': '_onAnimationStart($event)',\n        '(@state.done)': '_onAnimationDone($event)'\n      },\n      template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\",\n      styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.FocusTrapFactory\n    }, {\n      type: i1.InteractivityChecker\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i2.BreakpointObserver\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: MatBottomSheetConfig\n    }];\n  }, {\n    _portalOutlet: [{\n      type: ViewChild,\n      args: [CdkPortalOutlet, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {}\nMatBottomSheetModule.ɵfac = function MatBottomSheetModule_Factory(t) {\n  return new (t || MatBottomSheetModule)();\n};\nMatBottomSheetModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatBottomSheetModule\n});\nMatBottomSheetModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[OverlayModule, MatCommonModule, PortalModule], MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheetModule, [{\n    type: NgModule,\n    args: [{\n      imports: [OverlayModule, MatCommonModule, PortalModule],\n      exports: [MatBottomSheetContainer, MatCommonModule],\n      declarations: [MatBottomSheetContainer]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n  constructor(containerInstance, _overlayRef) {\n    this._overlayRef = _overlayRef;\n    /** Subject for notifying the user that the bottom sheet has been dismissed. */\n    this._afterDismissed = new Subject();\n    /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n    this._afterOpened = new Subject();\n    this.containerInstance = containerInstance;\n    this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n    // Emit when opening animation completes\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1)).subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n    // Dispose overlay when closing animation is complete\n    containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1)).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      _overlayRef.dispose();\n    });\n    _overlayRef.detachments().pipe(take(1)).subscribe(() => {\n      this._afterDismissed.next(this._result);\n      this._afterDismissed.complete();\n    });\n    merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n      if (!this.disableClose && (event.type !== 'keydown' || !hasModifierKey(event))) {\n        event.preventDefault();\n        this.dismiss();\n      }\n    });\n  }\n  /**\n   * Dismisses the bottom sheet.\n   * @param result Data to be passed back to the bottom sheet opener.\n   */\n  dismiss(result) {\n    if (!this._afterDismissed.closed) {\n      // Transition the backdrop in parallel to the bottom sheet.\n      this.containerInstance._animationStateChanged.pipe(filter(event => event.phaseName === 'start'), take(1)).subscribe(event => {\n        // The logic that disposes of the overlay depends on the exit animation completing, however\n        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n        // timeout which will clean everything up if the animation hasn't fired within the specified\n        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n        // vast majority of cases the timeout will have been cleared before it has fired.\n        this._closeFallbackTimeout = setTimeout(() => {\n          this._overlayRef.dispose();\n        }, event.totalTime + 100);\n        this._overlayRef.detachBackdrop();\n      });\n      this._result = result;\n      this.containerInstance.exit();\n    }\n  }\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\n  afterDismissed() {\n    return this._afterDismissed;\n  }\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n  afterOpened() {\n    return this._afterOpened;\n  }\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick() {\n    return this._overlayRef.backdropClick();\n  }\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents() {\n    return this._overlayRef.keydownEvents();\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n  constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n    this._overlay = _overlay;\n    this._injector = _injector;\n    this._parentBottomSheet = _parentBottomSheet;\n    this._defaultOptions = _defaultOptions;\n    this._bottomSheetRefAtThisLevel = null;\n  }\n  /** Reference to the currently opened bottom sheet. */\n  get _openedBottomSheetRef() {\n    const parent = this._parentBottomSheet;\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n  }\n  set _openedBottomSheetRef(value) {\n    if (this._parentBottomSheet) {\n      this._parentBottomSheet._openedBottomSheetRef = value;\n    } else {\n      this._bottomSheetRefAtThisLevel = value;\n    }\n  }\n  open(componentOrTemplateRef, config) {\n    const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n    const overlayRef = this._createOverlay(_config);\n    const container = this._attachContainer(overlayRef, _config);\n    const ref = new MatBottomSheetRef(container, overlayRef);\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n        $implicit: _config.data,\n        bottomSheetRef: ref\n      }));\n    } else {\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n      const contentRef = container.attachComponentPortal(portal);\n      ref.instance = contentRef.instance;\n    }\n    // When the bottom sheet is dismissed, clear the reference to it.\n    ref.afterDismissed().subscribe(() => {\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n      if (this._openedBottomSheetRef == ref) {\n        this._openedBottomSheetRef = null;\n      }\n    });\n    if (this._openedBottomSheetRef) {\n      // If a bottom sheet is already in view, dismiss it and enter the\n      // new bottom sheet after exit animation is complete.\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n      this._openedBottomSheetRef.dismiss();\n    } else {\n      // If no bottom sheet is in view, enter the new bottom sheet.\n      ref.containerInstance.enter();\n    }\n    this._openedBottomSheetRef = ref;\n    return ref;\n  }\n  /**\n   * Dismisses the currently-visible bottom sheet.\n   * @param result Data to pass to the bottom sheet instance.\n   */\n  dismiss(result) {\n    if (this._openedBottomSheetRef) {\n      this._openedBottomSheetRef.dismiss(result);\n    }\n  }\n  ngOnDestroy() {\n    if (this._bottomSheetRefAtThisLevel) {\n      this._bottomSheetRefAtThisLevel.dismiss();\n    }\n  }\n  /**\n   * Attaches the bottom sheet container component to the overlay.\n   */\n  _attachContainer(overlayRef, config) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{\n        provide: MatBottomSheetConfig,\n        useValue: config\n      }]\n    });\n    const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n    const containerRef = overlayRef.attach(containerPortal);\n    return containerRef.instance;\n  }\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified bottom sheet config.\n   */\n  _createOverlay(config) {\n    const overlayConfig = new OverlayConfig({\n      direction: config.direction,\n      hasBackdrop: config.hasBackdrop,\n      disposeOnNavigation: config.closeOnNavigation,\n      maxWidth: '100%',\n      scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n      positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0')\n    });\n    if (config.backdropClass) {\n      overlayConfig.backdropClass = config.backdropClass;\n    }\n    return this._overlay.create(overlayConfig);\n  }\n  /**\n   * Creates an injector to be used inside of a bottom sheet component.\n   * @param config Config that was used to create the bottom sheet.\n   * @param bottomSheetRef Reference to the bottom sheet.\n   */\n  _createInjector(config, bottomSheetRef) {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const providers = [{\n      provide: MatBottomSheetRef,\n      useValue: bottomSheetRef\n    }, {\n      provide: MAT_BOTTOM_SHEET_DATA,\n      useValue: config.data\n    }];\n    if (config.direction && (!userInjector || !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {\n          value: config.direction,\n          change: of()\n        }\n      });\n    }\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers\n    });\n  }\n}\nMatBottomSheet.ɵfac = function MatBottomSheet_Factory(t) {\n  return new (t || MatBottomSheet)(i0.ɵɵinject(i1$1.Overlay), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(MatBottomSheet, 12), i0.ɵɵinject(MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, 8));\n};\nMatBottomSheet.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MatBottomSheet,\n  factory: MatBottomSheet.ɵfac,\n  providedIn: MatBottomSheetModule\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatBottomSheet, [{\n    type: Injectable,\n    args: [{\n      providedIn: MatBottomSheetModule\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Overlay\n    }, {\n      type: i0.Injector\n    }, {\n      type: MatBottomSheet,\n      decorators: [{\n        type: Optional\n      }, {\n        type: SkipSelf\n      }]\n    }, {\n      type: MatBottomSheetConfig,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n  return {\n    ...defaults,\n    ...config\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };","map":{"version":3,"names":["i1$1","OverlayModule","OverlayConfig","i4","BasePortalOutlet","CdkPortalOutlet","PortalModule","TemplatePortal","ComponentPortal","i0","InjectionToken","EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Inject","ViewChild","NgModule","TemplateRef","Injector","InjectFlags","Injectable","SkipSelf","AnimationDurations","AnimationCurves","MatCommonModule","i1","coerceArray","i2","Breakpoints","_getFocusedElementPierceShadowDom","DOCUMENT","trigger","state","style","transition","group","animate","query","animateChild","Directionality","Subject","merge","of","ESCAPE","hasModifierKey","filter","take","MatBottomSheetContainer_ng_template_0_Template","rf","ctx","matBottomSheetAnimations","bottomSheetState","transform","COMPLEX","ACCELERATION_CURVE","optional","EXITING","DECELERATION_CURVE","MAT_BOTTOM_SHEET_DATA","MatBottomSheetConfig","constructor","data","hasBackdrop","disableClose","ariaLabel","closeOnNavigation","autoFocus","restoreFocus","MatBottomSheetContainer","_elementRef","_changeDetectorRef","_focusTrapFactory","_interactivityChecker","_ngZone","breakpointObserver","document","bottomSheetConfig","_animationState","_animationStateChanged","_elementFocusedBeforeOpened","attachDomPortal","portal","_validatePortalAttached","_setPanelClass","_savePreviouslyFocusedElement","_portalOutlet","_document","_breakpointSubscription","observe","Medium","Large","XLarge","subscribe","_toggleClass","isMatched","attachComponentPortal","attachTemplatePortal","enter","_destroyed","detectChanges","exit","markForCheck","ngOnDestroy","unsubscribe","_onAnimationDone","event","toState","_restoreFocus","_trapFocus","emit","_onAnimationStart","cssClass","add","nativeElement","classList","toggle","hasAttached","ngDevMode","Error","element","panelClass","_forceFocus","options","isFocusable","tabIndex","runOutsideAngular","callback","removeEventListener","removeAttribute","addEventListener","focus","_focusByCssSelector","selector","elementToFocus","querySelector","_focusTrap","create","activeElement","contains","focusInitialElementWhenReady","toFocus","body","destroy","Promise","resolve","then","ɵfac","MatBottomSheetContainer_Factory","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","FocusTrapFactory","InteractivityChecker","NgZone","BreakpointObserver","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatBottomSheetContainer_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","hostAttrs","hostVars","hostBindings","MatBottomSheetContainer_HostBindings","ɵɵsyntheticHostListener","MatBottomSheetContainer_animation_state_start_HostBindingHandler","$event","MatBottomSheetContainer_animation_state_done_HostBindingHandler","ɵɵattribute","ɵɵsyntheticHostProperty","features","ɵɵInheritDefinitionFeature","decls","vars","consts","template","MatBottomSheetContainer_Template","ɵɵtemplate","directives","styles","encapsulation","animation","ɵsetClassMetadata","args","changeDetection","Default","None","animations","host","undefined","decorators","static","MatBottomSheetModule","MatBottomSheetModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MatBottomSheetRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","pipe","phaseName","next","complete","clearTimeout","_closeFallbackTimeout","dispose","detachments","_result","backdropClick","keydownEvents","keyCode","preventDefault","dismiss","result","closed","setTimeout","totalTime","detachBackdrop","afterDismissed","afterOpened","MAT_BOTTOM_SHEET_DEFAULT_OPTIONS","MatBottomSheet","_overlay","_injector","_parentBottomSheet","_defaultOptions","_bottomSheetRefAtThisLevel","_openedBottomSheetRef","parent","value","open","componentOrTemplateRef","config","_config","_applyConfigDefaults","overlayRef","_createOverlay","container","_attachContainer","ref","$implicit","bottomSheetRef","_createInjector","contentRef","instance","userInjector","viewContainerRef","injector","providers","provide","useValue","containerPortal","containerRef","attach","overlayConfig","direction","disposeOnNavigation","maxWidth","scrollStrategy","scrollStrategies","block","positionStrategy","position","global","centerHorizontally","bottom","backdropClass","get","push","change","MatBottomSheet_Factory","ɵɵinject","Overlay","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","defaults"],"sources":["D:/MY FILES/Projects/angular-13/node_modules/@angular/material/fesm2020/bottom-sheet.mjs"],"sourcesContent":["import * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, TemplatePortal, ComponentPortal } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, NgModule, TemplateRef, Injector, InjectFlags, Injectable, SkipSelf } from '@angular/core';\nimport { AnimationDurations, AnimationCurves, MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport * as i2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport { _getFocusedElementPierceShadowDom } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, group, animate, query, animateChild } from '@angular/animations';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Subject, merge, of } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { filter, take } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Animations used by the Material bottom sheet. */\nconst matBottomSheetAnimations = {\n    /** Animation that shows and hides a bottom sheet. */\n    bottomSheetState: trigger('state', [\n        state('void, hidden', style({ transform: 'translateY(100%)' })),\n        state('visible', style({ transform: 'translateY(0%)' })),\n        transition('visible => void, visible => hidden', group([\n            animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.ACCELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n        transition('void => visible', group([\n            animate(`${AnimationDurations.EXITING} ${AnimationCurves.DECELERATION_CURVE}`),\n            query('@*', animateChild(), { optional: true }),\n        ])),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a bottom sheet. */\nconst MAT_BOTTOM_SHEET_DATA = new InjectionToken('MatBottomSheetData');\n/**\n * Configuration used when opening a bottom sheet.\n */\nclass MatBottomSheetConfig {\n    constructor() {\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** Whether the bottom sheet has a backdrop. */\n        this.hasBackdrop = true;\n        /** Whether the user can use escape or clicking outside to close the bottom sheet. */\n        this.disableClose = false;\n        /** Aria label to assign to the bottom sheet element. */\n        this.ariaLabel = null;\n        /**\n         * Whether the bottom sheet should close when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.closeOnNavigation = true;\n        // Note that this is set to 'dialog' by default, because while the a11y recommendations\n        // are to focus the first focusable element, doing so prevents screen readers from reading out the\n        // rest of the bottom sheet content.\n        /**\n         * Where the bottom sheet should focus on open.\n         * @breaking-change 14.0.0 Remove boolean option from autoFocus. Use string or\n         * AutoFocusTarget instead.\n         */\n        this.autoFocus = 'dialog';\n        /**\n         * Whether the bottom sheet should restore focus to the\n         * previously-focused element, after it's closed.\n         */\n        this.restoreFocus = true;\n    }\n}\n\n// TODO(crisbeto): consolidate some logic between this, MatDialog and MatSnackBar\n/**\n * Internal component that wraps user-provided bottom sheet content.\n * @docs-private\n */\nclass MatBottomSheetContainer extends BasePortalOutlet {\n    constructor(_elementRef, _changeDetectorRef, _focusTrapFactory, _interactivityChecker, _ngZone, breakpointObserver, document, \n    /** The bottom sheet configuration. */\n    bottomSheetConfig) {\n        super();\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        this._interactivityChecker = _interactivityChecker;\n        this._ngZone = _ngZone;\n        this.bottomSheetConfig = bottomSheetConfig;\n        /** The state of the bottom sheet animations. */\n        this._animationState = 'void';\n        /** Emits whenever the state of the animation changes. */\n        this._animationStateChanged = new EventEmitter();\n        /** Element that was focused before the bottom sheet was opened. */\n        this._elementFocusedBeforeOpened = null;\n        /**\n         * Attaches a DOM portal to the bottom sheet container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._validatePortalAttached();\n            this._setPanelClass();\n            this._savePreviouslyFocusedElement();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        this._document = document;\n        this._breakpointSubscription = breakpointObserver\n            .observe([Breakpoints.Medium, Breakpoints.Large, Breakpoints.XLarge])\n            .subscribe(() => {\n            this._toggleClass('mat-bottom-sheet-container-medium', breakpointObserver.isMatched(Breakpoints.Medium));\n            this._toggleClass('mat-bottom-sheet-container-large', breakpointObserver.isMatched(Breakpoints.Large));\n            this._toggleClass('mat-bottom-sheet-container-xlarge', breakpointObserver.isMatched(Breakpoints.XLarge));\n        });\n    }\n    /** Attach a component portal as content to this bottom sheet container. */\n    attachComponentPortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this bottom sheet container. */\n    attachTemplatePortal(portal) {\n        this._validatePortalAttached();\n        this._setPanelClass();\n        this._savePreviouslyFocusedElement();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Begin animation of bottom sheet entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the bottom sheet exiting from view. */\n    exit() {\n        if (!this._destroyed) {\n            this._animationState = 'hidden';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    ngOnDestroy() {\n        this._breakpointSubscription.unsubscribe();\n        this._destroyed = true;\n    }\n    _onAnimationDone(event) {\n        if (event.toState === 'hidden') {\n            this._restoreFocus();\n        }\n        else if (event.toState === 'visible') {\n            this._trapFocus();\n        }\n        this._animationStateChanged.emit(event);\n    }\n    _onAnimationStart(event) {\n        this._animationStateChanged.emit(event);\n    }\n    _toggleClass(cssClass, add) {\n        this._elementRef.nativeElement.classList.toggle(cssClass, add);\n    }\n    _validatePortalAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach bottom sheet content after content is already attached');\n        }\n    }\n    _setPanelClass() {\n        const element = this._elementRef.nativeElement;\n        element.classList.add(...coerceArray(this.bottomSheetConfig.panelClass || []));\n    }\n    /**\n     * Focuses the provided element. If the element is not focusable, it will add a tabIndex\n     * attribute to forcefully focus it. The attribute is removed after focus is moved.\n     * @param element The element to focus.\n     */\n    _forceFocus(element, options) {\n        if (!this._interactivityChecker.isFocusable(element)) {\n            element.tabIndex = -1;\n            // The tabindex attribute should be removed to avoid navigating to that element again\n            this._ngZone.runOutsideAngular(() => {\n                const callback = () => {\n                    element.removeEventListener('blur', callback);\n                    element.removeEventListener('mousedown', callback);\n                    element.removeAttribute('tabindex');\n                };\n                element.addEventListener('blur', callback);\n                element.addEventListener('mousedown', callback);\n            });\n        }\n        element.focus(options);\n    }\n    /**\n     * Focuses the first element that matches the given selector within the focus trap.\n     * @param selector The CSS selector for the element to set focus to.\n     */\n    _focusByCssSelector(selector, options) {\n        let elementToFocus = this._elementRef.nativeElement.querySelector(selector);\n        if (elementToFocus) {\n            this._forceFocus(elementToFocus, options);\n        }\n    }\n    /**\n     * Moves the focus inside the focus trap. When autoFocus is not set to 'bottom-sheet',\n     * if focus cannot be moved then focus will go to the bottom sheet container.\n     */\n    _trapFocus() {\n        const element = this._elementRef.nativeElement;\n        if (!this._focusTrap) {\n            this._focusTrap = this._focusTrapFactory.create(element);\n        }\n        // If were to attempt to focus immediately, then the content of the bottom sheet would not\n        // yet be ready in instances where change detection has to run first. To deal with this,\n        // we simply wait for the microtask queue to be empty when setting focus when autoFocus\n        // isn't set to bottom sheet. If the element inside the bottom sheet can't be focused,\n        // then the container is focused so the user can't tab into other elements behind it.\n        switch (this.bottomSheetConfig.autoFocus) {\n            case false:\n            case 'dialog':\n                const activeElement = _getFocusedElementPierceShadowDom();\n                // Ensure that focus is on the bottom sheet container. It's possible that a different\n                // component tried to move focus while the open animation was running. See:\n                // https://github.com/angular/components/issues/16215. Note that we only want to do this\n                // if the focus isn't inside the bottom sheet already, because it's possible that the\n                // consumer specified `autoFocus` in order to move focus themselves.\n                if (activeElement !== element && !element.contains(activeElement)) {\n                    element.focus();\n                }\n                break;\n            case true:\n            case 'first-tabbable':\n                this._focusTrap.focusInitialElementWhenReady();\n                break;\n            case 'first-heading':\n                this._focusByCssSelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n                break;\n            default:\n                this._focusByCssSelector(this.bottomSheetConfig.autoFocus);\n                break;\n        }\n    }\n    /** Restores focus to the element that was focused before the bottom sheet was opened. */\n    _restoreFocus() {\n        const toFocus = this._elementFocusedBeforeOpened;\n        // We need the extra check, because IE can set the `activeElement` to null in some cases.\n        if (this.bottomSheetConfig.restoreFocus && toFocus && typeof toFocus.focus === 'function') {\n            const activeElement = _getFocusedElementPierceShadowDom();\n            const element = this._elementRef.nativeElement;\n            // Make sure that focus is still inside the bottom sheet or is on the body (usually because a\n            // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n            // the consumer moved it themselves before the animation was done, in which case we shouldn't\n            // do anything.\n            if (!activeElement ||\n                activeElement === this._document.body ||\n                activeElement === element ||\n                element.contains(activeElement)) {\n                toFocus.focus();\n            }\n        }\n        if (this._focusTrap) {\n            this._focusTrap.destroy();\n        }\n    }\n    /** Saves a reference to the element that was focused before the bottom sheet was opened. */\n    _savePreviouslyFocusedElement() {\n        this._elementFocusedBeforeOpened = _getFocusedElementPierceShadowDom();\n        // The `focus` method isn't available during server-side rendering.\n        if (this._elementRef.nativeElement.focus) {\n            this._ngZone.runOutsideAngular(() => {\n                Promise.resolve().then(() => this._elementRef.nativeElement.focus());\n            });\n        }\n    }\n}\nMatBottomSheetContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusTrapFactory }, { token: i1.InteractivityChecker }, { token: i0.NgZone }, { token: i2.BreakpointObserver }, { token: DOCUMENT, optional: true }, { token: MatBottomSheetConfig }], target: i0.ɵɵFactoryTarget.Component });\nMatBottomSheetContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatBottomSheetContainer, selector: \"mat-bottom-sheet-container\", host: { attributes: { \"tabindex\": \"-1\", \"role\": \"dialog\", \"aria-modal\": \"true\" }, listeners: { \"@state.start\": \"_onAnimationStart($event)\", \"@state.done\": \"_onAnimationDone($event)\" }, properties: { \"attr.aria-label\": \"bottomSheetConfig?.ariaLabel\", \"@state\": \"_animationState\" }, classAttribute: \"mat-bottom-sheet-container\" }, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"], directives: [{ type: i4.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matBottomSheetAnimations.bottomSheetState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-bottom-sheet-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matBottomSheetAnimations.bottomSheetState], host: {\n                        'class': 'mat-bottom-sheet-container',\n                        'tabindex': '-1',\n                        'role': 'dialog',\n                        'aria-modal': 'true',\n                        '[attr.aria-label]': 'bottomSheetConfig?.ariaLabel',\n                        '[@state]': '_animationState',\n                        '(@state.start)': '_onAnimationStart($event)',\n                        '(@state.done)': '_onAnimationDone($event)',\n                    }, template: \"<ng-template cdkPortalOutlet></ng-template>\\r\\n\", styles: [\".mat-bottom-sheet-container{padding:8px 16px;min-width:100vw;box-sizing:border-box;display:block;outline:0;max-height:80vh;overflow:auto}.cdk-high-contrast-active .mat-bottom-sheet-container{outline:1px solid}.mat-bottom-sheet-container-xlarge,.mat-bottom-sheet-container-large,.mat-bottom-sheet-container-medium{border-top-left-radius:4px;border-top-right-radius:4px}.mat-bottom-sheet-container-medium{min-width:384px;max-width:calc(100vw - 128px)}.mat-bottom-sheet-container-large{min-width:512px;max-width:calc(100vw - 256px)}.mat-bottom-sheet-container-xlarge{min-width:576px;max-width:calc(100vw - 384px)}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusTrapFactory }, { type: i1.InteractivityChecker }, { type: i0.NgZone }, { type: i2.BreakpointObserver }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: MatBottomSheetConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBottomSheetModule {\n}\nMatBottomSheetModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatBottomSheetModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, declarations: [MatBottomSheetContainer], imports: [OverlayModule, MatCommonModule, PortalModule], exports: [MatBottomSheetContainer, MatCommonModule] });\nMatBottomSheetModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, imports: [[OverlayModule, MatCommonModule, PortalModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheetModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, MatCommonModule, PortalModule],\n                    exports: [MatBottomSheetContainer, MatCommonModule],\n                    declarations: [MatBottomSheetContainer],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a bottom sheet dispatched from the bottom sheet service.\n */\nclass MatBottomSheetRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the bottom sheet has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the bottom sheet has opened and appeared. */\n        this._afterOpened = new Subject();\n        this.containerInstance = containerInstance;\n        this.disableClose = containerInstance.bottomSheetConfig.disableClose;\n        // Emit when opening animation completes\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'visible'), take(1))\n            .subscribe(() => {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        });\n        // Dispose overlay when closing animation is complete\n        containerInstance._animationStateChanged\n            .pipe(filter(event => event.phaseName === 'done' && event.toState === 'hidden'), take(1))\n            .subscribe(() => {\n            clearTimeout(this._closeFallbackTimeout);\n            _overlayRef.dispose();\n        });\n        _overlayRef\n            .detachments()\n            .pipe(take(1))\n            .subscribe(() => {\n            this._afterDismissed.next(this._result);\n            this._afterDismissed.complete();\n        });\n        merge(_overlayRef.backdropClick(), _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))).subscribe(event => {\n            if (!this.disableClose &&\n                (event.type !== 'keydown' || !hasModifierKey(event))) {\n                event.preventDefault();\n                this.dismiss();\n            }\n        });\n    }\n    /**\n     * Dismisses the bottom sheet.\n     * @param result Data to be passed back to the bottom sheet opener.\n     */\n    dismiss(result) {\n        if (!this._afterDismissed.closed) {\n            // Transition the backdrop in parallel to the bottom sheet.\n            this.containerInstance._animationStateChanged\n                .pipe(filter(event => event.phaseName === 'start'), take(1))\n                .subscribe(event => {\n                // The logic that disposes of the overlay depends on the exit animation completing, however\n                // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n                // timeout which will clean everything up if the animation hasn't fired within the specified\n                // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n                // vast majority of cases the timeout will have been cleared before it has fired.\n                this._closeFallbackTimeout = setTimeout(() => {\n                    this._overlayRef.dispose();\n                }, event.totalTime + 100);\n                this._overlayRef.detachBackdrop();\n            });\n            this._result = result;\n            this.containerInstance.exit();\n        }\n    }\n    /** Gets an observable that is notified when the bottom sheet is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\n    afterOpened() {\n        return this._afterOpened;\n    }\n    /**\n     * Gets an observable that emits when the overlay's backdrop has been clicked.\n     */\n    backdropClick() {\n        return this._overlayRef.backdropClick();\n    }\n    /**\n     * Gets an observable that emits when keydown events are targeted on the overlay.\n     */\n    keydownEvents() {\n        return this._overlayRef.keydownEvents();\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default bottom sheet options. */\nconst MAT_BOTTOM_SHEET_DEFAULT_OPTIONS = new InjectionToken('mat-bottom-sheet-default-options');\n/**\n * Service to trigger Material Design bottom sheets.\n */\nclass MatBottomSheet {\n    constructor(_overlay, _injector, _parentBottomSheet, _defaultOptions) {\n        this._overlay = _overlay;\n        this._injector = _injector;\n        this._parentBottomSheet = _parentBottomSheet;\n        this._defaultOptions = _defaultOptions;\n        this._bottomSheetRefAtThisLevel = null;\n    }\n    /** Reference to the currently opened bottom sheet. */\n    get _openedBottomSheetRef() {\n        const parent = this._parentBottomSheet;\n        return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\n    }\n    set _openedBottomSheetRef(value) {\n        if (this._parentBottomSheet) {\n            this._parentBottomSheet._openedBottomSheetRef = value;\n        }\n        else {\n            this._bottomSheetRefAtThisLevel = value;\n        }\n    }\n    open(componentOrTemplateRef, config) {\n        const _config = _applyConfigDefaults(this._defaultOptions || new MatBottomSheetConfig(), config);\n        const overlayRef = this._createOverlay(_config);\n        const container = this._attachContainer(overlayRef, _config);\n        const ref = new MatBottomSheetRef(container, overlayRef);\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal(componentOrTemplateRef, null, {\n                $implicit: _config.data,\n                bottomSheetRef: ref,\n            }));\n        }\n        else {\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, this._createInjector(_config, ref));\n            const contentRef = container.attachComponentPortal(portal);\n            ref.instance = contentRef.instance;\n        }\n        // When the bottom sheet is dismissed, clear the reference to it.\n        ref.afterDismissed().subscribe(() => {\n            // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\n            if (this._openedBottomSheetRef == ref) {\n                this._openedBottomSheetRef = null;\n            }\n        });\n        if (this._openedBottomSheetRef) {\n            // If a bottom sheet is already in view, dismiss it and enter the\n            // new bottom sheet after exit animation is complete.\n            this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\n            this._openedBottomSheetRef.dismiss();\n        }\n        else {\n            // If no bottom sheet is in view, enter the new bottom sheet.\n            ref.containerInstance.enter();\n        }\n        this._openedBottomSheetRef = ref;\n        return ref;\n    }\n    /**\n     * Dismisses the currently-visible bottom sheet.\n     * @param result Data to pass to the bottom sheet instance.\n     */\n    dismiss(result) {\n        if (this._openedBottomSheetRef) {\n            this._openedBottomSheetRef.dismiss(result);\n        }\n    }\n    ngOnDestroy() {\n        if (this._bottomSheetRefAtThisLevel) {\n            this._bottomSheetRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the bottom sheet container component to the overlay.\n     */\n    _attachContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatBottomSheetConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        return containerRef.instance;\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified bottom sheet config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig({\n            direction: config.direction,\n            hasBackdrop: config.hasBackdrop,\n            disposeOnNavigation: config.closeOnNavigation,\n            maxWidth: '100%',\n            scrollStrategy: config.scrollStrategy || this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position().global().centerHorizontally().bottom('0'),\n        });\n        if (config.backdropClass) {\n            overlayConfig.backdropClass = config.backdropClass;\n        }\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a bottom sheet component.\n     * @param config Config that was used to create the bottom sheet.\n     * @param bottomSheetRef Reference to the bottom sheet.\n     */\n    _createInjector(config, bottomSheetRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const providers = [\n            { provide: MatBottomSheetRef, useValue: bottomSheetRef },\n            { provide: MAT_BOTTOM_SHEET_DATA, useValue: config.data },\n        ];\n        if (config.direction &&\n            (!userInjector ||\n                !userInjector.get(Directionality, null, InjectFlags.Optional))) {\n            providers.push({\n                provide: Directionality,\n                useValue: { value: config.direction, change: of() },\n            });\n        }\n        return Injector.create({ parent: userInjector || this._injector, providers });\n    }\n}\nMatBottomSheet.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, deps: [{ token: i1$1.Overlay }, { token: i0.Injector }, { token: MatBottomSheet, optional: true, skipSelf: true }, { token: MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMatBottomSheet.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, providedIn: MatBottomSheetModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatBottomSheet, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatBottomSheetModule }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i0.Injector }, { type: MatBottomSheet, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatBottomSheetConfig, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_BOTTOM_SHEET_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Applies default options to the bottom sheet config.\n * @param defaults Object containing the default values to which to fall back.\n * @param config The configuration to which the defaults will be applied.\n * @returns The new configuration object with defaults applied.\n */\nfunction _applyConfigDefaults(defaults, config) {\n    return { ...defaults, ...config };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BOTTOM_SHEET_DATA, MAT_BOTTOM_SHEET_DEFAULT_OPTIONS, MatBottomSheet, MatBottomSheetConfig, MatBottomSheetContainer, MatBottomSheetModule, MatBottomSheetRef, matBottomSheetAnimations };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}