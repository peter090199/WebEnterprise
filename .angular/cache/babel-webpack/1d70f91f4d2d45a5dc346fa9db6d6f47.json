{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"src/app/Services/Global/notifications.service\";\nimport * as i4 from \"src/app/Services/Menu/menu.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/divider\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/button\";\nexport let PromosUIComponent = /*#__PURE__*/(() => {\n  class PromosUIComponent {\n    constructor(fb, dialogRef, data, notificationService, menuService) {\n      this.fb = fb;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.notificationService = notificationService;\n      this.menuService = menuService;\n      this.btnSave = \"Save\";\n      this.loading = false;\n      this.moduleName = this.data.moduleName;\n      //console.log(this.moduleName)\n      this.menuForm = this.fb.group({\n        home: ['', [Validators.required]],\n        description: ['', [Validators.required]]\n      });\n    }\n    ngOnInit() {}\n    onSubmit() {\n      if (this.menuForm.valid) {\n        const menuData = this.menuForm.value;\n        this.loading = true;\n        if (this.btnSave === \"Save\") {\n          console.log(menuData);\n          this.menuService.postWebsiteMenu(menuData).subscribe(response => {\n            if (response.success == true) {\n              this.notificationService.toastrSuccess(response.message);\n              this.loading = false;\n              this.ResetForm();\n            } else {\n              this.notificationService.toastrSuccess(response.message);\n              this.loading = false;\n            }\n          }, error => {\n            console.error('Error saving menu:', error);\n          });\n        } else if (this.btnSave === 'Update') {\n          this.menuService.editWebsiteMenu(this.data.transNo, menuData).subscribe({\n            next: res => {\n              if (res.success === true) {\n                this.notificationService.toastrSuccess(res.message);\n                this.ResetForm();\n                this.loading = true;\n              } else {\n                this.notificationService.toastrWarning(res.message);\n                this.loading = false;\n              }\n            },\n            error: err => {\n              this.notificationService.toastrWarning(err.error);\n              this.loading = false; // Set loading to false in case of error\n            }\n          });\n        }\n      }\n    }\n    ResetForm() {\n      this.menuForm.reset();\n    }\n  }\n  PromosUIComponent.ɵfac = function PromosUIComponent_Factory(t) {\n    return new (t || PromosUIComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.NotificationsService), i0.ɵɵdirectiveInject(i4.MenuService));\n  };\n  PromosUIComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PromosUIComponent,\n    selectors: [[\"app-promos-ui\"]],\n    decls: 19,\n    vars: 6,\n    consts: [[\"mat-dialog-title\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"standard\", 1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"Home title\", \"autocomplete\", \"off\", \"required\", \"\", \"formControlName\", \"home\"], [\"matInput\", \"\", \"autocomplete\", \"off\", \"placeholder\", \"Enter description\", \"required\", \"\", \"formControlName\", \"description\", 1, \"custom-textarea\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"mat-dialog-close\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"]],\n    template: function PromosUIComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card-header\");\n        i0.ɵɵelementStart(1, \"h2\", 0);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"mat-divider\");\n        i0.ɵɵelementStart(4, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function PromosUIComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(5, \"mat-card-content\");\n        i0.ɵɵelementStart(6, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(7, \"mat-label\");\n        i0.ɵɵtext(8, \"Home Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"textarea\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-dialog-actions\", 5);\n        i0.ɵɵelementStart(15, \"button\", 6);\n        i0.ɵɵtext(16, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 7);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", ctx.btnSave, \" \", ctx.moduleName, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.menuForm);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"mat-dialog-close\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.menuForm.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.btnSave);\n      }\n    },\n    directives: [i5.MatCardHeader, i2.MatDialogTitle, i6.MatDivider, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i5.MatCardContent, i7.MatFormField, i7.MatLabel, i8.MatInput, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.FormControlName, i2.MatDialogActions, i9.MatButton, i2.MatDialogClose],\n    styles: [\"\"]\n  });\n  return PromosUIComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}