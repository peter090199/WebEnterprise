{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-toastr\";\nimport * as i2 from \"@angular/material/dialog\";\nexport let NotificationsService = /*#__PURE__*/(() => {\n  class NotificationsService {\n    constructor(toastr, dialog) {\n      this.toastr = toastr;\n      this.dialog = dialog;\n    }\n    toastrSuccess(msg) {\n      this.toastr.success(msg);\n    }\n    toastrError(msg) {\n      this.toastr.error(msg);\n    }\n    toastrWarning(msg) {\n      this.toastr.warning(msg);\n    }\n    toastrInfo(msg) {\n      this.toastr.info(msg);\n    }\n    popupWarning(title, text) {\n      return Swal.fire({\n        title: title,\n        text: text,\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        confirmButtonColor: '#3f51b5',\n        cancelButtonColor: '#f44336',\n        cancelButtonText: 'No'\n      });\n    }\n    popup(title, text) {\n      return Swal.fire({\n        title: title,\n        text: text,\n        icon: \"warning\",\n        showCancelButton: false,\n        confirmButtonText: 'OK',\n        confirmButtonColor: '#3f51b5',\n        cancelButtonColor: '#f44336',\n        cancelButtonText: 'No'\n      });\n    }\n    popupWarning3Buttons(title, text) {\n      return Swal.fire({\n        title: title,\n        text: text,\n        icon: \"warning\",\n        showCancelButton: true,\n        showDenyButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'No',\n        confirmButtonColor: '#3f51b5',\n        cancelButtonColor: '#f44336',\n        denyButtonText: 'Yes, Remove All'\n      });\n    }\n    // popupWarningDiscard(title: string): Promise<string> {\n    //   return Swal.fire({\n    //     title: title, // Use the passed title\n    //     text: 'Do you want to save the changes?',\n    //     showDenyButton: true,\n    //     confirmButtonText: 'Yes',\n    //     denyButtonText: 'No',\n    //   }).then((result) => {\n    //     if (result.isConfirmed) {\n    //       Swal.fire('Saved!', '', 'success');\n    //       this.refreshFormData(); // Trigger refresh after saving\n    //       return 'confirmed'; // Return a value to indicate confirmation\n    //     } else if (result.isDenied) {\n    //       const dialogConfig = new MatDialogConfig();\n    //       dialogConfig.width = '500px';\n    //      // const dialogRef = this.dialog.open(AddEducationUIComponent, dialogConfig);\n    //       dialogRef.afterClosed().subscribe(() => {\n    //         // Ensure the form data is refreshed after the dialog is closed\n    //         this.refreshFormData();\n    //       });\n    //       return 'denied'; // Return a value to indicate denial\n    //     }\n    //     return 'cancelled'; // Return if the action was cancelled\n    //   });\n    // }\n    // Method to refresh form data\n    // refreshFormData() {\n    //   const education = this.dataService.getDataEducation();\n    //   return education;\n    // }\n    toastPopUp(msg) {\n      return Swal.fire({\n        text: msg,\n        icon: \"success\"\n      });\n    }\n    toastPopUpError(msg) {\n      return Swal.fire({\n        text: msg,\n        icon: \"warning\",\n        showCancelButton: false,\n        confirmButtonText: 'OK',\n        confirmButtonColor: '#3f51b5',\n        cancelButtonColor: '#f44336',\n        cancelButtonText: 'No'\n      });\n    }\n  }\n  NotificationsService.ɵfac = function NotificationsService_Factory(t) {\n    return new (t || NotificationsService)(i0.ɵɵinject(i1.ToastrService), i0.ɵɵinject(i2.MatDialog));\n  };\n  NotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotificationsService,\n    factory: NotificationsService.ɵfac,\n    providedIn: 'root'\n  });\n  return NotificationsService;\n})();","map":null,"metadata":{},"sourceType":"module"}