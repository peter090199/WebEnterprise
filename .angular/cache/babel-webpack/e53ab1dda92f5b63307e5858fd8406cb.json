{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n  }\n}\nfunction MatOption_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r1.group.label, \")\");\n  }\n}\nconst _c2 = [\"*\"];\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n  constructor(highContrastModeDetector, _sanityChecks, _document) {\n    this._sanityChecks = _sanityChecks;\n    this._document = _document;\n    /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n    this._hasDoneGlobalChecks = false;\n    // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n    // in MatCommonModule.\n    highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    if (!this._hasDoneGlobalChecks) {\n      this._hasDoneGlobalChecks = true;\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (this._checkIsEnabled('doctype')) {\n          _checkDoctypeIsDefined(this._document);\n        }\n        if (this._checkIsEnabled('theme')) {\n          _checkThemeIsPresent(this._document);\n        }\n        if (this._checkIsEnabled('version')) {\n          _checkCdkVersionMatch();\n        }\n      }\n    }\n  }\n  /** Gets whether a specific sanity check is enabled. */\n  _checkIsEnabled(name) {\n    if (_isTestEnvironment()) {\n      return false;\n    }\n    if (typeof this._sanityChecks === 'boolean') {\n      return this._sanityChecks;\n    }\n    return !!this._sanityChecks[name];\n  }\n}\nMatCommonModule.ɵfac = function MatCommonModule_Factory(t) {\n  return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n};\nMatCommonModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatCommonModule\n});\nMatCommonModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[BidiModule], BidiModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCommonModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [BidiModule]\n    }]\n  }], function () {\n    return [{\n      type: i1.HighContrastModeDetector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MATERIAL_SANITY_CHECKS]\n      }]\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || typeof getComputedStyle !== 'function') {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      // This class member exists as an interop with `MatFormFieldControl` which expects\n      // a public `stateChanges` observable to emit whenever the form field should be updated.\n      // The description is not specifically mentioning the error state, as classes using this\n      // mixin can/should emit an event in other cases too.\n      /** Emits whenever the component state changes. */\n      this.stateChanges = new Subject();\n      /** Whether the component is in an error state. */\n      this.errorState = false;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      const oldState = this.errorState;\n      const parent = this._parentFormGroup || this._parentForm;\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n      const control = this.ngControl ? this.ngControl.control : null;\n      const newState = matcher.isErrorState(control, parent);\n      if (newState !== oldState) {\n        this.errorState = newState;\n        this.stateChanges.next();\n      }\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n  constructor(matDateLocale,\n  /**\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 14.0.0\n   */\n  _platform) {\n    super();\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    this.useUtcForDisplay = false;\n    super.setLocale(matDateLocale);\n  }\n  getYear(date) {\n    return date.getFullYear();\n  }\n  getMonth(date) {\n    return date.getMonth();\n  }\n  getDate(date) {\n    return date.getDate();\n  }\n  getDayOfWeek(date) {\n    return date.getDay();\n  }\n  getMonthNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      month: style,\n      timeZone: 'utc'\n    });\n    return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n  }\n  getDateNames() {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      day: 'numeric',\n      timeZone: 'utc'\n    });\n    return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getDayOfWeekNames(style) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      weekday: style,\n      timeZone: 'utc'\n    });\n    return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n  }\n  getYearName(date) {\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      year: 'numeric',\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  getFirstDayOfWeek() {\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n    return 0;\n  }\n  getNumDaysInMonth(date) {\n    return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n  }\n  clone(date) {\n    return new Date(date.getTime());\n  }\n  createDate(year, month, date) {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      // Check for invalid month and date (except upper bound on date which we have to check after\n      // creating the Date).\n      if (month < 0 || month > 11) {\n        throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n      }\n      if (date < 1) {\n        throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n      }\n    }\n    let result = this._createDateWithOverflow(year, month, date);\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n    return result;\n  }\n  today() {\n    return new Date();\n  }\n  parse(value) {\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n    // parameters.\n    if (typeof value == 'number') {\n      return new Date(value);\n    }\n    return value ? new Date(Date.parse(value)) : null;\n  }\n  format(date, displayFormat) {\n    if (!this.isValid(date)) {\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\n    }\n    const dtf = new Intl.DateTimeFormat(this.locale, {\n      ...displayFormat,\n      timeZone: 'utc'\n    });\n    return this._format(dtf, date);\n  }\n  addCalendarYears(date, years) {\n    return this.addCalendarMonths(date, years * 12);\n  }\n  addCalendarMonths(date, months) {\n    let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n    }\n    return newDate;\n  }\n  addCalendarDays(date, days) {\n    return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n  }\n  toIso8601(date) {\n    return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n  }\n  /**\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n   * invalid date for all other values.\n   */\n  deserialize(value) {\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n      // string is the right format first.\n      if (ISO_8601_REGEX.test(value)) {\n        let date = new Date(value);\n        if (this.isValid(date)) {\n          return date;\n        }\n      }\n    }\n    return super.deserialize(value);\n  }\n  isDateInstance(obj) {\n    return obj instanceof Date;\n  }\n  isValid(date) {\n    return !isNaN(date.getTime());\n  }\n  invalid() {\n    return new Date(NaN);\n  }\n  /** Creates a date but allows the month and date to overflow. */\n  _createDateWithOverflow(year, month, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setFullYear` and `setHours` instead.\n    const d = new Date();\n    d.setFullYear(year, month, date);\n    d.setHours(0, 0, 0, 0);\n    return d;\n  }\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  _2digit(n) {\n    return ('00' + n).slice(-2);\n  }\n  /**\n   * When converting Date object to string, javascript built-in functions may return wrong\n   * results because it applies its internal DST rules. The DST rules around the world change\n   * very frequently, and the current valid rule is not always valid in previous years though.\n   * We work around this problem building a new Date object which has its internal UTC\n   * representation with the local date and time.\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n   *    timeZone set to 'utc' to work fine.\n   * @param date Date from which we want to get the string representation according to dtf\n   * @returns A Date object with its UTC representation based on the passed in date info\n   */\n  _format(dtf, date) {\n    // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n    // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n    const d = new Date();\n    d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n    return dtf.format(d);\n  }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) {\n  return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(i1$1.Platform));\n};\nNativeDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NativeDateAdapter,\n  factory: NativeDateAdapter.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: i1$1.Platform\n    }];\n  }, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {}\nNativeDateModule.ɵfac = function NativeDateModule_Factory(t) {\n  return new (t || NativeDateModule)();\n};\nNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NativeDateModule\n});\nNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: NativeDateAdapter\n      }]\n    }]\n  }], null, null);\n})();\nclass MatNativeDateModule {}\nMatNativeDateModule.ɵfac = function MatNativeDateModule_Factory(t) {\n  return new (t || MatNativeDateModule)();\n};\nMatNativeDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatNativeDateModule\n});\nMatNativeDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: MAT_NATIVE_DATE_FORMATS\n  }],\n  imports: [[NativeDateModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatNativeDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [NativeDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_NATIVE_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n  return new (t || ShowOnDirtyErrorStateMatcher)();\n};\nShowOnDirtyErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ShowOnDirtyErrorStateMatcher,\n  factory: ShowOnDirtyErrorStateMatcher.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) {\n  return new (t || ErrorStateMatcher)();\n};\nErrorStateMatcher.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ErrorStateMatcher,\n  factory: ErrorStateMatcher.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {}\nMatLine.ɵfac = function MatLine_Factory(t) {\n  return new (t || MatLine)();\n};\nMatLine.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatLine,\n  selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n  hostAttrs: [1, \"mat-line\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {}\nMatLineModule.ɵfac = function MatLineModule_Factory(t) {\n  return new (t || MatLineModule)();\n};\nMatLineModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatLineModule\n});\nMatLineModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[MatCommonModule], MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatLine, MatCommonModule],\n      declarations: [MatLine]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    /** Current state of the ripple. */\n    this.state = 3 /* HIDDEN */;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({\n  passive: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  constructor(_target, _ngZone, elementOrElementRef, platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /** Set of currently active ripple references. */\n    this._activeRipples = new Set();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const duration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${duration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical because then the `scale` would not animate properly.\n    enforceStyleRecalculation(ripple);\n    ripple.style.transform = 'scale(1)';\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config);\n    rippleRef.state = 0 /* FADING_IN */;\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.add(rippleRef);\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    // Wait for the ripple element to be completely faded in.\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n    this._runTimeoutOutsideZone(() => {\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n      rippleRef.state = 1 /* VISIBLE */;\n      // When the timer runs out while the user has kept their pointer down, we want to\n      // keep only the persistent ripples and the latest transient ripple. We do this,\n      // because we don't want stacked transient ripples to appear after their enter\n      // animation has finished.\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n        rippleRef.fadeOut();\n      }\n    }, duration);\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    const wasActive = this._activeRipples.delete(rippleRef);\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // For ripples that are not active anymore, don't re-run the fade-out animation.\n    if (!wasActive) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = 2 /* FADING_OUT */;\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\n    this._runTimeoutOutsideZone(() => {\n      rippleRef.state = 3 /* HIDDEN */;\n      rippleEl.remove();\n    }, animationConfig.exitDuration);\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._activeRipples.forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    this._registerEvents(pointerDownEvents);\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      this._registerEvents(pointerUpEvents);\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      for (let i = 0; i < touches.length; i++) {\n        this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._activeRipples.forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === 1 /* VISIBLE */ || ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n  _runTimeoutOutsideZone(fn, delay = 0) {\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n  }\n  /** Registers event listeners for a given list of events. */\n  _registerEvents(eventTypes) {\n    this._ngZone.runOutsideAngular(() => {\n      eventTypes.forEach(type => {\n        this._triggerElement.addEventListener(type, this, passiveEventOptions);\n      });\n    });\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    if (this._triggerElement) {\n      pointerDownEvents.forEach(type => {\n        this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n      });\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n        });\n      }\n    }\n  }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n  window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n  constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n    this._elementRef = _elementRef;\n    this._animationMode = _animationMode;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     */\n    this.radius = 0;\n    this._disabled = false;\n    /** Whether ripple directive is initialized and the input bindings are set. */\n    this._isInitialized = false;\n    this._globalOptions = globalOptions || {};\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n  }\n  /**\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\n   * by using the `launch()` method.\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value) {\n      this.fadeOutAllNonPersistent();\n    }\n    this._disabled = value;\n    this._setupTriggerEventsIfEnabled();\n  }\n  /**\n   * The element that triggers the ripple when click events are received.\n   * Defaults to the directive's host element.\n   */\n  get trigger() {\n    return this._trigger || this._elementRef.nativeElement;\n  }\n  set trigger(trigger) {\n    this._trigger = trigger;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnInit() {\n    this._isInitialized = true;\n    this._setupTriggerEventsIfEnabled();\n  }\n  ngOnDestroy() {\n    this._rippleRenderer._removeTriggerEvents();\n  }\n  /** Fades out all currently showing ripple elements. */\n  fadeOutAll() {\n    this._rippleRenderer.fadeOutAll();\n  }\n  /** Fades out all currently showing non-persistent ripple elements. */\n  fadeOutAllNonPersistent() {\n    this._rippleRenderer.fadeOutAllNonPersistent();\n  }\n  /**\n   * Ripple configuration from the directive's input values.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleConfig() {\n    return {\n      centered: this.centered,\n      radius: this.radius,\n      color: this.color,\n      animation: {\n        ...this._globalOptions.animation,\n        ...(this._animationMode === 'NoopAnimations' ? {\n          enterDuration: 0,\n          exitDuration: 0\n        } : {}),\n        ...this.animation\n      },\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n    };\n  }\n  /**\n   * Whether ripples on pointer-down are disabled or not.\n   * @docs-private Implemented as part of RippleTarget\n   */\n  get rippleDisabled() {\n    return this.disabled || !!this._globalOptions.disabled;\n  }\n  /** Sets up the trigger event listeners if ripples are enabled. */\n  _setupTriggerEventsIfEnabled() {\n    if (!this.disabled && this._isInitialized) {\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\n    }\n  }\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n  launch(configOrX, y = 0, config) {\n    if (typeof configOrX === 'number') {\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {\n        ...this.rippleConfig,\n        ...config\n      });\n    } else {\n      return this._rippleRenderer.fadeInRipple(0, 0, {\n        ...this.rippleConfig,\n        ...configOrX\n      });\n    }\n  }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) {\n  return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatRipple.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: MatRipple,\n  selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n  hostAttrs: [1, \"mat-ripple\"],\n  hostVars: 2,\n  hostBindings: function MatRipple_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    }\n  },\n  inputs: {\n    color: [\"matRippleColor\", \"color\"],\n    unbounded: [\"matRippleUnbounded\", \"unbounded\"],\n    centered: [\"matRippleCentered\", \"centered\"],\n    radius: [\"matRippleRadius\", \"radius\"],\n    animation: [\"matRippleAnimation\", \"animation\"],\n    disabled: [\"matRippleDisabled\", \"disabled\"],\n    trigger: [\"matRippleTrigger\", \"trigger\"]\n  },\n  exportAs: [\"matRipple\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRipple, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-ripple], [matRipple]',\n      exportAs: 'matRipple',\n      host: {\n        'class': 'mat-ripple',\n        '[class.mat-ripple-unbounded]': 'unbounded'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1$1.Platform\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    color: [{\n      type: Input,\n      args: ['matRippleColor']\n    }],\n    unbounded: [{\n      type: Input,\n      args: ['matRippleUnbounded']\n    }],\n    centered: [{\n      type: Input,\n      args: ['matRippleCentered']\n    }],\n    radius: [{\n      type: Input,\n      args: ['matRippleRadius']\n    }],\n    animation: [{\n      type: Input,\n      args: ['matRippleAnimation']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['matRippleDisabled']\n    }],\n    trigger: [{\n      type: Input,\n      args: ['matRippleTrigger']\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {}\nMatRippleModule.ɵfac = function MatRippleModule_Factory(t) {\n  return new (t || MatRippleModule)();\n};\nMatRippleModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatRippleModule\n});\nMatRippleModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[MatCommonModule], MatCommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatRippleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatRipple, MatCommonModule],\n      declarations: [MatRipple]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  constructor(_animationMode) {\n    this._animationMode = _animationMode;\n    /** Display state of the checkbox. */\n    this.state = 'unchecked';\n    /** Whether the checkbox is disabled. */\n    this.disabled = false;\n  }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) {\n  return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n};\nMatPseudoCheckbox.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatPseudoCheckbox,\n  selectors: [[\"mat-pseudo-checkbox\"]],\n  hostAttrs: [1, \"mat-pseudo-checkbox\"],\n  hostVars: 8,\n  hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    }\n  },\n  inputs: {\n    state: \"state\",\n    disabled: \"disabled\"\n  },\n  decls: 0,\n  vars: 0,\n  template: function MatPseudoCheckbox_Template(rf, ctx) {},\n  styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n      },\n      styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [ANIMATION_MODULE_TYPE]\n      }]\n    }];\n  }, {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {}\nMatPseudoCheckboxModule.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n  return new (t || MatPseudoCheckboxModule)();\n};\nMatPseudoCheckboxModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatPseudoCheckboxModule\n});\nMatPseudoCheckboxModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[MatCommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule],\n      exports: [MatPseudoCheckbox],\n      declarations: [MatPseudoCheckbox]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n  constructor(parent) {\n    super();\n    /** Unique id for the underlying label. */\n    this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    this._inert = parent?.inertGroups ?? false;\n  }\n}\n_MatOptgroupBase.ɵfac = function _MatOptgroupBase_Factory(t) {\n  return new (t || _MatOptgroupBase)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n};\n_MatOptgroupBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptgroupBase,\n  inputs: {\n    label: \"label\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptgroupBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    label: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {}\nMatOptgroup.ɵfac = /* @__PURE__ */function () {\n  let ɵMatOptgroup_BaseFactory;\n  return function MatOptgroup_Factory(t) {\n    return (ɵMatOptgroup_BaseFactory || (ɵMatOptgroup_BaseFactory = i0.ɵɵgetInheritedFactory(MatOptgroup)))(t || MatOptgroup);\n  };\n}();\nMatOptgroup.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOptgroup,\n  selectors: [[\"mat-optgroup\"]],\n  hostAttrs: [1, \"mat-optgroup\"],\n  hostVars: 5,\n  hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n      i0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\"\n  },\n  exportAs: [\"matOptgroup\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: MAT_OPTGROUP,\n    useExisting: MatOptgroup\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 4,\n  vars: 2,\n  consts: [[\"aria-hidden\", \"true\", 1, \"mat-optgroup-label\", 3, \"id\"]],\n  template: function MatOptgroup_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtext(1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵprojection(3, 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"id\", ctx._labelId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    }\n  },\n  styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptgroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-optgroup',\n      exportAs: 'matOptgroup',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      inputs: ['disabled'],\n      host: {\n        'class': 'mat-optgroup',\n        '[attr.role]': '_inert ? null : \"group\"',\n        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n        '[class.mat-optgroup-disabled]': 'disabled'\n      },\n      providers: [{\n        provide: MAT_OPTGROUP,\n        useExisting: MatOptgroup\n      }],\n      template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n      styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor(/** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\nclass _MatOptionBase {\n  constructor(_element, _changeDetectorRef, _parent, group) {\n    this._element = _element;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._parent = _parent;\n    this.group = group;\n    this._selected = false;\n    this._active = false;\n    this._disabled = false;\n    this._mostRecentViewValue = '';\n    /** The unique ID of the option. */\n    this.id = `mat-option-${_uniqueIdCounter++}`;\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    this.onSelectionChange = new EventEmitter();\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    this._stateChanges = new Subject();\n  }\n  /** Whether the wrapping component is in multiple selection mode. */\n  get multiple() {\n    return this._parent && this._parent.multiple;\n  }\n  /** Whether or not the option is currently selected. */\n  get selected() {\n    return this._selected;\n  }\n  /** Whether the option is disabled. */\n  get disabled() {\n    return this.group && this.group.disabled || this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  /** Whether ripples for the option are disabled. */\n  get disableRipple() {\n    return !!(this._parent && this._parent.disableRipple);\n  }\n  /**\n   * Whether or not the option is currently active and ready to be selected.\n   * An active option displays styles as if it is focused, but the\n   * focus is actually retained somewhere else. This comes in handy\n   * for components like autocomplete where focus must remain on the input.\n   */\n  get active() {\n    return this._active;\n  }\n  /**\n   * The displayed value of the option. It is necessary to show the selected option in the\n   * select's trigger.\n   */\n  get viewValue() {\n    // TODO(kara): Add input property alternative for node envs.\n    return (this._getHostElement().textContent || '').trim();\n  }\n  /** Selects the option. */\n  select() {\n    if (!this._selected) {\n      this._selected = true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Deselects the option. */\n  deselect() {\n    if (this._selected) {\n      this._selected = false;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent();\n    }\n  }\n  /** Sets focus onto this option. */\n  focus(_origin, options) {\n    // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n    // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n    const element = this._getHostElement();\n    if (typeof element.focus === 'function') {\n      element.focus(options);\n    }\n  }\n  /**\n   * This method sets display styles on the option to make it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setActiveStyles() {\n    if (!this._active) {\n      this._active = true;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /**\n   * This method removes display styles on the option that made it appear\n   * active. This is used by the ActiveDescendantKeyManager so key\n   * events will display the proper options as active on arrow key events.\n   */\n  setInactiveStyles() {\n    if (this._active) {\n      this._active = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel() {\n    return this.viewValue;\n  }\n  /** Ensures the option is selected when activated from the keyboard. */\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n      this._selectViaInteraction();\n      // Prevent the page from scrolling down and form submits.\n      event.preventDefault();\n    }\n  }\n  /**\n   * `Selects the option while indicating the selection came from the user. Used to\n   * determine if the select's view -> model callback should be invoked.`\n   */\n  _selectViaInteraction() {\n    if (!this.disabled) {\n      this._selected = this.multiple ? !this._selected : true;\n      this._changeDetectorRef.markForCheck();\n      this._emitSelectionChangeEvent(true);\n    }\n  }\n  /**\n   * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n   * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n   * attributes adds a significant amount of noise to screen-reader users without providing useful\n   * information.\n   */\n  _getAriaSelected() {\n    return this.selected || (this.multiple ? false : null);\n  }\n  /** Returns the correct tabindex for the option depending on disabled state. */\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Gets the host DOM element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n  ngAfterViewChecked() {\n    // Since parent components could be using the option's label to display the selected values\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n    // relatively cheap, however we still limit them only to selected options in order to avoid\n    // hitting the DOM too often.\n    if (this._selected) {\n      const viewValue = this.viewValue;\n      if (viewValue !== this._mostRecentViewValue) {\n        this._mostRecentViewValue = viewValue;\n        this._stateChanges.next();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n  /** Emits the selection change event. */\n  _emitSelectionChangeEvent(isUserInput = false) {\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n  }\n}\n_MatOptionBase.ɵfac = function _MatOptionBase_Factory(t) {\n  i0.ɵɵinvalidFactory();\n};\n_MatOptionBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: _MatOptionBase,\n  inputs: {\n    value: \"value\",\n    id: \"id\",\n    disabled: \"disabled\"\n  },\n  outputs: {\n    onSelectionChange: \"onSelectionChange\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatOptionBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined\n    }, {\n      type: _MatOptgroupBase\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    onSelectionChange: [{\n      type: Output\n    }]\n  });\n})();\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n  constructor(element, changeDetectorRef, parent, group) {\n    super(element, changeDetectorRef, parent, group);\n  }\n}\nMatOption.ɵfac = function MatOption_Factory(t) {\n  return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n};\nMatOption.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MatOption,\n  selectors: [[\"mat-option\"]],\n  hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"],\n  hostVars: 12,\n  hostBindings: function MatOption_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n        return ctx._selectViaInteraction();\n      })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n      i0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    }\n  },\n  exportAs: [\"matOption\"],\n  features: [i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c2,\n  decls: 5,\n  vars: 4,\n  consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"class\", \"cdk-visually-hidden\", 4, \"ngIf\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"], [1, \"cdk-visually-hidden\"]],\n  template: function MatOption_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n      i0.ɵɵelementStart(1, \"span\", 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, MatOption_span_3_Template, 2, 1, \"span\", 2);\n      i0.ɵɵelement(4, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.multiple);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.group && ctx.group._inert);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    }\n  },\n  directives: [i3.NgIf, MatRipple, MatPseudoCheckbox],\n  styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-option',\n      exportAs: 'matOption',\n      host: {\n        'role': 'option',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mat-selected]': 'selected',\n        '[class.mat-option-multiple]': 'multiple',\n        '[class.mat-active]': 'active',\n        '[id]': 'id',\n        '[attr.aria-selected]': '_getAriaSelected()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[class.mat-option-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        'class': 'mat-option mat-focus-indicator'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n      styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTION_PARENT_COMPONENT]\n      }]\n    }, {\n      type: MatOptgroup,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_OPTGROUP]\n      }]\n    }];\n  }, null);\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {}\nMatOptionModule.ɵfac = function MatOptionModule_Factory(t) {\n  return new (t || MatOptionModule)();\n};\nMatOptionModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatOptionModule\n});\nMatOptionModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatOptionModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n      exports: [MatOption, MatOptgroup],\n      declarations: [MatOption, MatOptgroup]\n    }]\n  }], null, null);\n})();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };","map":{"version":3,"names":["i0","Version","InjectionToken","NgModule","Optional","Inject","inject","LOCALE_ID","Injectable","Directive","Input","Component","ViewEncapsulation","ChangeDetectionStrategy","EventEmitter","Output","i1","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","BidiModule","VERSION","VERSION$1","i3","DOCUMENT","CommonModule","i1$1","_isTestEnvironment","normalizePassiveListenerOptions","coerceBooleanProperty","coerceNumberProperty","coerceElement","Subject","Observable","startWith","ANIMATION_MODULE_TYPE","ENTER","SPACE","hasModifierKey","_c0","_c1","MatOption_mat_pseudo_checkbox_0_Template","rf","ctx","ɵɵelement","ctx_r0","ɵɵnextContext","ɵɵproperty","selected","disabled","MatOption_span_3_Template","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r1","ɵɵadvance","ɵɵtextInterpolate1","group","label","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","providedIn","factory","MatCommonModule","constructor","highContrastModeDetector","_sanityChecks","_document","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","ngDevMode","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","name","ɵfac","MatCommonModule_Factory","t","ɵɵinject","HighContrastModeDetector","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","imports","ɵsetClassMetadata","args","exports","undefined","decorators","Document","doc","doctype","console","warn","body","getComputedStyle","testElement","createElement","classList","add","appendChild","computedStyle","display","remove","full","mixinDisabled","base","_disabled","value","mixinColor","defaultColor","color","_color","colorPalette","_elementRef","nativeElement","mixinDisableRipple","_disableRipple","disableRipple","mixinTabIndex","defaultTabIndex","_tabIndex","tabIndex","mixinErrorState","stateChanges","errorState","updateErrorState","oldState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","next","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","forEach","complete","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","max","MAT_DATE_FORMATS","ISO_8601_REGEX","range","length","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","_platform","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","style","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","result","today","parse","format","displayFormat","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","NativeDateAdapter_Factory","Platform","ɵprov","ɵɵdefineInjectable","token","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","providers","provide","useClass","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","MatLine","MatLine_Factory","ɵdir","ɵɵdefineDirective","selectors","hostAttrs","selector","host","setLines","lines","element","prefix","changes","pipe","subscribe","setClass","className","isAdd","toggle","MatLineModule","MatLineModule_Factory","declarations","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","passive","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","_ngZone","elementOrElementRef","platform","_isPointerDown","_activeRipples","Set","_pointerUpEventsRegistered","isBrowser","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","height","radius","distanceToFurthestCorner","offsetX","offsetY","duration","ripple","document","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","delete","size","rippleEl","opacity","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","event","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","fn","delay","runOutsideAngular","setTimeout","eventTypes","addEventListener","removeEventListener","window","getPropertyValue","rect","distX","Math","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","ngZone","globalOptions","_animationMode","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","ngOnInit","ngOnDestroy","launch","configOrX","MatRipple_Factory","ɵɵdirectiveInject","ElementRef","NgZone","hostVars","hostBindings","MatRipple_HostBindings","ɵɵclassProp","unbounded","inputs","exportAs","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","ɵcmp","ɵɵdefineComponent","MatPseudoCheckbox_HostBindings","decls","vars","template","MatPseudoCheckbox_Template","styles","encapsulation","changeDetection","None","OnPush","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","_MatOptgroupBase_Factory","features","ɵɵInheritDefinitionFeature","MAT_OPTGROUP","MatOptgroup","ɵMatOptgroup_BaseFactory","MatOptgroup_Factory","ɵɵgetInheritedFactory","MatOptgroup_HostBindings","ɵɵattribute","toString","ɵɵProvidersFeature","useExisting","ngContentSelectors","consts","MatOptgroup_Template","ɵɵprojectionDef","ɵɵprojection","_uniqueIdCounter","MatOptionSelectionChange","source","isUserInput","_MatOptionBase","_element","_changeDetectorRef","_parent","_selected","_active","_mostRecentViewValue","id","onSelectionChange","_stateChanges","multiple","active","viewValue","_getHostElement","textContent","trim","select","markForCheck","_emitSelectionChangeEvent","deselect","focus","_origin","options","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","preventDefault","_getAriaSelected","_getTabIndex","ngAfterViewChecked","emit","_MatOptionBase_Factory","ɵɵinvalidFactory","outputs","ChangeDetectorRef","MatOption","changeDetectorRef","MatOption_Factory","MatOption_HostBindings","ɵɵlistener","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","$event","ɵɵhostProperty","MatOption_Template","ɵɵtemplate","directives","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","MatOptionModule_Factory"],"sources":["C:/Users/Mariosoft/Desktop/New folder/material-pro-angular-lite-master/material-pro-angular-lite-master/angular-13/node_modules/@angular/material/fesm2020/core.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [[BidiModule], BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MATERIAL_SANITY_CHECKS]\n                }] }, { type: Document, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, { ...displayFormat, timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_DATE_LOCALE]\n                }] }, { type: i1$1.Platform }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [[NativeDateModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = { ...defaultRippleAnimationConfig, ...config.animation };\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = { ...defaultRippleAnimationConfig, ...rippleRef.config.animation };\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.remove();\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: {\n                ...this._globalOptions.animation,\n                ...(this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {}),\n                ...this.animation,\n            },\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, { ...this.rippleConfig, ...config });\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, { ...this.rippleConfig, ...configOrX });\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }]; }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [[MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = parent?.inertGroups ?? false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }, {\n                    type: Optional\n                }] }]; }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], components: [{ type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTION_PARENT_COMPONENT]\n                }] }, { type: MatOptgroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_OPTGROUP]\n                }] }]; } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}